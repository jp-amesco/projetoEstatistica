!function(){return function n(t,r,e){function i(o,u){if(!r[o]){if(!t[o]){var s="function"==typeof require&&require;if(!u&&s)return s(o,!0);if(a)return a(o,!0);var d=new Error("Cannot find module '"+o+"'");throw d.code="MODULE_NOT_FOUND",d}var c=r[o]={exports:{}};t[o][0].call(c.exports,function(n){return i(t[o][1][n]||n)},c,c.exports,n,t,r,e)}return r[o].exports}for(var a="function"==typeof require&&require,o=0;o<e.length;o++)i(e[o]);return i}}()({1:[function(n,t,r){"use strict";var e=n("./dados/entradaDados.js");n("./dados/identificaVariavel.js");document.querySelector(".btn").addEventListener("click",function(){var n=document.querySelector("#dados").value,t=e.init(n);t.sort()})},{"./dados/entradaDados.js":2,"./dados/identificaVariavel.js":3}],2:[function(n,t,r){"use strict";r.init=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=0,r=0;if(null==n||n.length<=1)return"Quantidade de dados insuficiente para os cálculos";for(var e=n.split(",").map(function(n){return n.trim()}),i=0;i<e.length;i++)isNaN(e[i])&&t++,isNaN(e[i])||(r++,e[i]=parseInt(e[i]));return t>0&&r>0?"Dados inválidos":e}},{}],3:[function(n,t,r){"use strict";r.init=function(n){var t=[];if("string"==typeof n[0])return"qualitativa";for(var r=0;r<n.length;r++)-1==t.indexOf(n[r])&&t.push(n[r]);return t.length<7?"discreta":t.length>=7&&t.length<=10?"pergunta":"continua"}},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
