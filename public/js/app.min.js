!function(){return function e(n,t,r){function i(u,c){if(!t[u]){if(!n[u]){var a="function"==typeof require&&require;if(!c&&a)return a(u,!0);if(o)return o(u,!0);var l=new Error("Cannot find module '"+u+"'");throw l.code="MODULE_NOT_FOUND",l}var s=t[u]={exports:{}};n[u][0].call(s.exports,function(e){return i(n[u][1][e]||e)},s,s.exports,e,n,t,r)}return t[u].exports}for(var o="function"==typeof require&&require,u=0;u<r.length;u++)i(r[u]);return i}}()({1:[function(e,n,t){"use strict";e("./telaInicial/manipulaTelaInicial.js").init()},{"./telaInicial/manipulaTelaInicial.js":2}],2:[function(e,n,t){"use strict";t.init=function(){document.querySelector("#comece_agora").addEventListener("click",function(e){e.preventDefault(),document.querySelector("#comece_agora").classList.add("d-none"),document.querySelector("#todos_tipos_pesquisa").classList.remove("d-none");for(var n=document.querySelectorAll(".tipo_pesquisa"),t=function(e){n[e].addEventListener("click",function(t){var r;t.preventDefault(),r=n[e].id,alert(r)})},r=0;r<n.length;r++)t(r)})}},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
