!function(){return function t(e,n,a){function i(s,r){if(!n[s]){if(!e[s]){var l="function"==typeof require&&require;if(!r&&l)return l(s,!0);if(o)return o(s,!0);var u=new Error("Cannot find module '"+s+"'");throw u.code="MODULE_NOT_FOUND",u}var c=n[s]={exports:{}};e[s][0].call(c.exports,function(t){return i(e[s][1][t]||t)},c,c.exports,t,e,n,a)}return n[s].exports}for(var o="function"==typeof require&&require,s=0;s<a.length;s++)i(a[s]);return i}}()({1:[function(t,e,n){const a=t("./dados/entradaDados.js"),i=t("./frequencia.js"),o=t("./intervaloClasse.js"),s=t("./calculaFacContinua.js"),r=t("./dados/identificaVariavel.js"),l=t("./moda/modaQualitativa.js"),u=t("./moda/modaQuantitativaDiscreta.js"),c=t("./moda/modaQuantitativaContinua.js"),d=t("./media/mediaQuantitativaDiscreta.js"),f=t("./media/mediaQuantitativaContinua.js"),h=t("./mediana/medianaQuantitativaDiscreta.js"),m=t("./mediana/medianaQuantitativaContinua.js"),p=(t("./medidasSeparatrizes/medidasSeparatrizesDiscreta.js"),t("./mediana/medianaQualitativa.js")),v=t("./dados/importaDados.js"),g=t("./dados/organizacaoDados.js"),j=t("./desvioPadrao/desvioPadrao.js"),C=t("./desvioPadrao/desvioPadraoContinua.js"),q=(t("./medidasSeparatrizes/medidasSeparatrizesContinua.js"),t("./erros/mensagemErroValidacaoDados.js")),S=t("./dom/criaTabela.js"),D=t("./dom/criaGrafico.js"),y=t("./dom/colocaValor.js"),L=t("./criaDadosTabelaDiscreta.js"),x=t("./criaDadosTabelaContinua.js"),b=t("./dom/manipulaMedidasSeparatrizes.js"),M=t("./calculaClassesContinua.js"),T=document.querySelector("#arquivo"),E=document.querySelector("#manualmente"),z=document.querySelector("#dados"),Q=document.querySelector(".alterarDados"),F=document.querySelector("#importar");T.addEventListener("change",function(t){t.preventDefault,v.init(this,z),document.querySelector("#todos_tipos_pesquisa").classList.remove("d-none"),Q.classList.remove("d-none"),F.classList.add("d-none"),E.classList.add("d-none")}),E.addEventListener("click",function(t){Q.classList.remove("d-none"),document.querySelector("#todos_tipos_pesquisa").classList.remove("d-none"),z.removeAttribute("disabled"),z.value=null,F.classList.add("d-none"),this.classList.add("d-none")});const P=document.querySelectorAll(".pesquisa");for(let t=0;t<P.length;t++)P[t].addEventListener("click",function(t){t.preventDefault();const e=this.id;let n,v=a.init(z.value);if(1==v||2==v)q.init(v);else{n=r.init(v),v=g.init(v);const t=i.init(v);let a,q,T,E,z,Q;const F=o.init(v),P=M.init(v,F);let w;"qualitativa"==n?(a=l.init(t),T=p.init(v)):"discreta"==n?(a=u.init(t),q=d.init(v),T=h.init(v),Q=j.init(t,q,e),z=L.init(t),S.init(z,n)):"continua"==n&&(E=s.init(v,F),a=c.init(v,F),q=f.init(v,F),T=m.init(v,E,F),Q=C.init(v,q,e,F,P),z=x.init(P,F,v),S.init(z,n)),D.init(n,t),y.init(a,q,T,Q);const N=document.querySelectorAll(".slider"),A=document.querySelectorAll(".output"),O=document.querySelectorAll(".result");b.init(N,O,v,A),document.querySelector("#menu-tabs").classList.remove("d-none"),document.querySelector("#valores").classList.remove("d-none"),w="tabela";const k=document.querySelectorAll(".nav-link");for(let t=0;t<k.length;t++)k[t].addEventListener("click",function(t){t.preventDefault,this.classList.add("active"),document.querySelector("#"+this.id).classList.add("active"),document.querySelector("#"+w).classList.remove("active"),document.querySelector("."+w).classList.add("d-none"),document.querySelector("."+this.id).classList.remove("d-none"),w=this.id})}})},{"./calculaClassesContinua.js":2,"./calculaFacContinua.js":3,"./criaDadosTabelaContinua.js":4,"./criaDadosTabelaDiscreta.js":5,"./dados/entradaDados.js":6,"./dados/identificaVariavel.js":7,"./dados/importaDados.js":8,"./dados/organizacaoDados.js":9,"./desvioPadrao/desvioPadrao.js":10,"./desvioPadrao/desvioPadraoContinua.js":11,"./dom/colocaValor.js":12,"./dom/criaGrafico.js":13,"./dom/criaTabela.js":14,"./dom/manipulaMedidasSeparatrizes.js":15,"./erros/mensagemErroValidacaoDados.js":16,"./frequencia.js":17,"./intervaloClasse.js":18,"./media/mediaQuantitativaContinua.js":19,"./media/mediaQuantitativaDiscreta.js":20,"./mediana/medianaQualitativa.js":21,"./mediana/medianaQuantitativaContinua.js":22,"./mediana/medianaQuantitativaDiscreta.js":23,"./medidasSeparatrizes/medidasSeparatrizesContinua.js":24,"./medidasSeparatrizes/medidasSeparatrizesDiscreta.js":25,"./moda/modaQualitativa.js":26,"./moda/modaQuantitativaContinua.js":27,"./moda/modaQuantitativaDiscreta.js":28}],2:[function(t,e,n){n.init=function(t,e){let n=1,a=[];const i={};for(let o=0;o<t.length;o++)t[o]<t[0]+e.intervalo*n?a.push(t[o]):(i["classe"+n]=a,a=[t[o]],n++);return i["classe"+n]=a,i}},{}],3:[function(t,e,n){n.init=function(t,e){const n=[];let a=[],i=1;for(let o=0;o<t.length;o++)t[o]<t[0]+e.intervalo*i?a.push(t[o]):(0==n.length?n[0]=a.length:n[i-1]=a.length+n[i-2],i++,a=[t[o]]);return n[i-1]=a.length+n[i-2],n}},{}],4:[function(t,e,n){t("./calculaClassesContinua.js"),t("./intervaloClasse.js");n.init=function(t,e,n){const a=[],i=["Classe"],o=["xi"],s=["fi"],r=["fr %"],l=["fac"],u=["fac %"];let c,d,f,h=1,m=t.classe1[0],p=0;for(c in t)i.push(e.quantClasse),f=m+"   ------|   "+(d=t.classe1[0]+e.intervalo*h),m=d,o.push(f),s.push(t[c].length),r.push((100*t[c].length/n.length).toFixed(2)+"%"),l.push(s[h]+p),p=l[h],u.push((100*l[h]/n.length).toFixed(2)+"%"),h++;return a.push(i,o,s,r,l,u),a}},{"./calculaClassesContinua.js":2,"./intervaloClasse.js":18}],5:[function(t,e,n){const a=["fr %"],i=["Fac"],o=["Fac %"];n.init=function(t){let e=[];const n=t[1].slice();n.unshift("xi");const s=t[0].slice();return s.unshift("fi"),function(t){let e=0;for(let n=1;n<t.length;n++)e+=t[n],i.push(e);for(let n=1;n<t.length;n++)a.push(parseFloat(t[n]/e*100).toFixed(2)+"%"),o.push(parseFloat(i[n]/e*100).toFixed(2)+"%")}(s),e=[n,s,a,i,o]}},{}],6:[function(t,e,n){n.init=function(t=null){let e=0,n=0;if(null==t||t.length<=1)return 1;const a=t.split(",").map(function(t){return t.trim()});for(let t=0;t<a.length;t++)isNaN(a[t])&&e++,isNaN(a[t])||(n++,a[t]=parseFloat(a[t]));return e>0&&n>0?2:a}},{}],7:[function(t,e,n){n.init=function(t){const e=[];if("string"==typeof t[0])return"qualitativa";for(let n=0;n<t.length;n++)-1==e.indexOf(t[n])&&e.push(t[n]);return e.length<7?"discreta":e.length>=7&&e.length<=10?"pergunta":"continua"}},{}],8:[function(t,e,n){n.init=function(t,e){const n=new FileReader;n.onload=function(t){console.log(e),e.value=e.value=t.target.result},n.readAsText(t.files[0])}},{}],9:[function(t,e,n){n.init=function t(e){if(e.length<=1)return e;const n=e[0],a=[],i=[];for(let t=1;t<e.length;t++)e[t]<n?a.push(e[t]):i.push(e[t]);return t(a).concat(n,t(i))}},{}],10:[function(t,e,n){n.init=function(t,e,n){const a=t[0],i=t[1];let o=0,s=0,r=0;for(let t=0;t<i.length;t++)o+=Math.pow(i[t]-e,2)*a[t],r+=a[t];return"SENSO"==n&&s++,(o=Math.sqrt(o/(r-s))).toFixed(2)}},{}],11:[function(t,e,n){n.init=function(t,e,n,a,i){const o=[],s=[];let r=0,l=0,u=0;for(let e=0;e<a.quantClasse;e++)s[e]=(t[0]+a.intervalo*e+t[0]+a.intervalo*(e+1))/2,o[e]=i["classe"+(e+1)].length,l+=o[e];for(let t=0;t<s.length;t++)u+=Math.pow(s[t]-e,2)*o[t];return"SENSO"==n&&r++,(u=Math.sqrt(u/(l-r))).toFixed(2)}},{}],12:[function(t,e,n){n.init=function(t,e,n,a){let i,o;const s=document.querySelectorAll(".title-valores");for(let r=0;r<s.length;r++){switch(s[r].id){case"moda":i=document.createElement("p"),o=document.createTextNode(t),i.appendChild(o),i.id="modaParagrafo";break;case"media":i=document.createElement("p"),o=document.createTextNode(e),i.appendChild(o),i.id="mediaParagrafo";break;case"mediana":i=document.createElement("p"),o=document.createTextNode(n),i.appendChild(o),i.id="medianaParagrafo";break;case"desvioPadrao":i=document.createElement("p"),o=document.createTextNode(a),i.appendChild(o),i.id="desvioParagrafo"}s[r].appendChild(i)}}},{}],13:[function(t,e,n){n.init=function(t,e){const n=function(t){return"qualitativa"==t?"PieChart":"ColumnChart"}(t),a=function(t,e,n=null,a=null,i=null){let o={};return"PieChart"==t?o={title:n}:"ColumnChart"==t&&"discreta"==e?o={title:n,hAxis:{title:a},vAxis:{labelBar:i}}:"ColumnChart"==t&&"continua"==e?o={width:800,height:400,title:n,hAxis:{title:a},vAxis:{labelBar:i},bar:{groupWidth:"100%"}}:void 0}(n,t,"teste","teste1","teste2");google.charts.load("current",{packages:["corechart"]}),google.charts.setOnLoadCallback(function(){const t=new google.visualization.DataTable;t.addColumn("string","Horizontal"),t.addColumn("number",null),t.addRows(i),new google.visualization[n](document.getElementById("myChart")).draw(t,a)});const i=function(t){const e=[];for(var n=0;n<t[0].length;n++){const a=[];a.push(t[1][n].toString(),t[0][n]),e[n]=a}return e}(e)}},{}],14:[function(t,e,n){n.init=function(t){let e;const n=document.querySelector(".table"),a=document.querySelector("#tbody");a&&n.removeChild(a);const i=document.createElement("tbody");i.id="tbody";for(let n=0;n<t[0].length;n++){const a=document.createElement("tr");for(let i=0;i<t.length;i++){if(0==n){e=document.createElement("th");const a=document.createTextNode(t[i][n]);e.appendChild(a)}else{e=document.createElement("td");const a=document.createTextNode(t[i][n]);e.appendChild(a)}a.appendChild(e)}i.appendChild(a)}n.appendChild(i)}},{}],15:[function(t,e,n){const a=t("../medidasSeparatrizes/medidasSeparatrizesDiscreta.js");n.init=function(t,e,n,i){for(let o=0;o<t.length;o++)t[o].value=1,e[o].innerHTML=a.init(n,t[o].value,t[o].max),i[o].innerHTML=t[o].value,t[o].addEventListener("input",function(t){i[o].innerHTML=this.value,e[o].innerHTML=a.init(n,this.value,this.max)})}},{"../medidasSeparatrizes/medidasSeparatrizesDiscreta.js":25}],16:[function(t,e,n){n.init=function(t){const e=document.querySelector("#mensagem");1==t?(e.classList.add("alert-danger"),e.innerHTML="Quantidade de dados insulficiente. Reinsira os dados"):2==t&&(e.classList.add("alert-danger"),e.innerHTML="Dados incorretos. Insira apenas nÃºmeros ou apenas letras"),$("#mensagem").fadeIn("300",function(){window.setTimeout(function(){$("#mensagem").fadeOut()},5e3)})}},{}],17:[function(t,e,n){n.init=function(t){const e=[],n=[],a=[];let i=0;for(let n=0;n<t.length;n++)-1==e.indexOf(t[n])&&e.push(t[n]);for(let a=0;a<e.length;a++){for(let n=0;n<t.length;n++)e[a]==t[n]&&i++;n.push(i),i=0}return a.push(n,e),a}},{}],18:[function(t,e,n){n.init=function(t){let e,n=t[t.length-1]-t[0]+1,a=0,i=0;const o=Math.sqrt(n),s={};do{n%(Math.round(o)-1)==0?(e=n/(i=n/(Math.round(o)-1)),a++):n%Math.round(o)==0?(e=n/(i=n/Math.round(o)),a++):n%(Math.round(o)+1)==0&&(e=n/(i=n/(Math.round(o)+1)),a++),n++}while(0==a);return s.intervalo=i,s.quantClasse=e,s}},{}],19:[function(t,e,n){n.init=function(t,e){const n=[],a={};let i=[],o=1;for(let n=0;n<t.length;n++)t[n]<t[0]+e.intervalo*o?i.push(t[n]):(a["classe"+o]=i,i=[t[n]],o++);a["classe"+o]=i;let s=0;for(let i=1;i<=e.quantClasse;i++)n.push((t[0]+e.intervalo*(i-1)+t[0]+e.intervalo*i)/2*a["classe"+i].length),s+=n[i-1];return s/t.length}},{}],20:[function(t,e,n){n.init=function(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}},{}],21:[function(t,e,n){n.init=function(t){let e=0;const n=[];return t.length%2==0?t[e=t.length/2-1]!=t[e+1]?(n.push(t[e]),n.push(t[e+1]),n):t[e]:t[e=Math.round(t.length/2-1)]}},{}],22:[function(t,e,n){n.init=function(t,e,n){const a=t.length/2,i=t[Math.round(a)],o={};let s,r,l,u=[],c=1;for(let e=0;e<t.length;e++)t[e]<t[0]+n.intervalo*c?u.push(t[e]):(o["classe"+c]=u,u=[t[e]],c++);o["classe"+c]=u;for(let a=0;a<n.quantClasse;a++)if(-1!=o["classe"+(a+1)].indexOf(i)){s=t[0]+n.intervalo*a,r=0==a?0:e[a-1],l=o["classe"+(a+1)].length;break}return s+(a-r)/l*n.intervalo}},{}],23:[function(t,e,n){n.init=function(t){let e=0;return t.length%2==0?t[e=t.length/2-1]!=t[e+1]?(t[e]+t[e+1])/2:t[e]:t[e=Math.round(t.length/2-1)]}},{}],24:[function(t,e,n){n.init=function(t,e,n,a,i,o){const s=t.length*a/i,r=[],l=[];let u,c,d=Math.round(s);s-d<0&&d--;for(let e=0;e<Object.keys(o).length;e++)o["classe"+(e+1)].indexOf(t[d])>-1&&(c=e+1);for(let n=0;n<e.quantClasse;n++)r[n]=t[0]+e.intervalo*n,l[n]=o["classe"+(n+1)].length;return u=1==c?0:n[c-2],r[c-1]+(s-u)/l[c-1]*e.intervalo}},{}],25:[function(t,e,n){n.init=function(t,e,n){const a=Math.round(t.length*e/n);return 0==a?t[a]:t[a-1]}},{}],26:[function(t,e,n){n.init=function(t){const e=t[0],n=t[1],a=[];let i=e[0],o=0;for(let t=0;t<e.length;t++)if(e[t]>=i){o=i,i=e[t];for(let t=0;t<a.length;t++)o<i&&a.pop();a.push(n[t])}return a}},{}],27:[function(t,e,n){n.init=function(t,e){const n={};let a,i,o=[],s=1;for(let a=0;a<t.length;a++)t[a]<t[0]+e.intervalo*s?o.push(t[a]):(n["classe"+s]=o,o=[t[a]],s++);n["classe"+s]=o,a=1,i=n.classe1.length;for(let t=1;t<e.quantClasse;t++)n["classe"+(t+1)].length>i&&(a=t+1,i=n["classe"+(t+1)].length);return(t[0]+e.intervalo*(a-1)+(t[0]+e.intervalo*a))/2}},{}],28:[function(t,e,n){n.init=function(t){const e=t[0],n=t[1],a=[];let i=e[0],o=0;for(let t=0;t<e.length;t++)if(e[t]>=i){o=i,i=e[t];for(let t=0;t<a.length;t++)o<i&&a.pop();a.push(n[t])}return a}},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
