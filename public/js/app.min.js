!function(){return function t(n,i,a){function e(o,u){if(!i[o]){if(!n[o]){var s="function"==typeof require&&require;if(!u&&s)return s(o,!0);if(r)return r(o,!0);var l=new Error("Cannot find module '"+o+"'");throw l.code="MODULE_NOT_FOUND",l}var d=i[o]={exports:{}};n[o][0].call(d.exports,function(t){return e(n[o][1][t]||t)},d,d.exports,t,n,i,a)}return i[o].exports}for(var r="function"==typeof require&&require,o=0;o<a.length;o++)e(a[o]);return e}}()({1:[function(t,n,i){"use strict";var a=t("./dados/entradaDados.js"),e=t("./frequencia.js"),r=t("./intervaloClasse.js"),o=t("./calculaFacContinua.js"),u=t("./dados/identificaVariavel.js"),s=t("./moda/modaQualitativa.js"),l=t("./moda/modaQuantitativaDiscreta.js"),d=t("./moda/modaQuantitativaContinua.js"),c=t("./media/mediaQuantitativaDiscreta.js"),v=t("./media/mediaQuantitativaContinua.js"),f=t("./mediana/medianaQuantitativaDiscreta.js"),h=t("./mediana/medianaQuantitativaContinua.js"),g=t("./medidasSeparatrizes/quartil.js"),m=t("./medidasSeparatrizes/quintil.js"),p=t("./medidasSeparatrizes/decil.js"),j=t("./medidasSeparatrizes/percentil.js"),q=t("./mediana/medianaQualitativa.js");t("./dados/organizacaoDados.js");document.querySelector(".btn").addEventListener("click",function(){var t=document.querySelector("#dados").value,n=document.querySelector("#parte_quartil").value,i=document.querySelector("#parte_quintil").value,M=document.querySelector("#parte_decil").value,Q=document.querySelector("#parte_percentil").value,C=a.init(t),S=void 0;if(1==C||2==C);else{S=u.init(C);var D=void 0,z=0,y=1;do{z=0;for(var x=0;x<C.length-y;x++)C[x]>C[x+1]&&(D=C[x],C[x]=C[x+1],C[x+1]=D,z++);y++}while(0!=z);var N=e.init(C),O=void 0,_=void 0,w=void 0,F=void 0,E=void 0,b=void 0,k=void 0;if("qualitativa"==S)O=s.init(N),w=q.init(C);else if("discreta"==S)O=l.init(N),_=c.init(C),w=f.init(C),F=g.init(C,n),E=m.init(C,i),b=p.init(C,M),k=j.init(C,Q);else if("continua"==S){var L=r.init(C),U=o.init(C,L);O=d.init(C,L),_=v.init(C,L),w=h.init(C,U,L)}console.log("moda: ",O),console.log("media: ",_),console.log("mediana: ",w),console.log("quartil: ",F),console.log("quintil: ",E),console.log("decil: ",b),console.log("percentil: ",k)}})},{"./calculaFacContinua.js":2,"./dados/entradaDados.js":3,"./dados/identificaVariavel.js":4,"./dados/organizacaoDados.js":5,"./frequencia.js":6,"./intervaloClasse.js":7,"./media/mediaQuantitativaContinua.js":8,"./media/mediaQuantitativaDiscreta.js":9,"./mediana/medianaQualitativa.js":10,"./mediana/medianaQuantitativaContinua.js":11,"./mediana/medianaQuantitativaDiscreta.js":12,"./medidasSeparatrizes/decil.js":13,"./medidasSeparatrizes/percentil.js":14,"./medidasSeparatrizes/quartil.js":15,"./medidasSeparatrizes/quintil.js":16,"./moda/modaQualitativa.js":17,"./moda/modaQuantitativaContinua.js":18,"./moda/modaQuantitativaDiscreta.js":19}],2:[function(t,n,i){"use strict";i.init=function(t,n){for(var i=[],a=[],e=1,r=0;r<t.length;r++)t[r]<t[0]+n.intervalo*e?a.push(t[r]):(0==i.length?i[0]=a.length:i[e-1]=a.length+i[e-2],e++,a=[t[r]]);return i[e-1]=a.length+i[e-2],i}},{}],3:[function(t,n,i){"use strict";i.init=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,n=0,i=0;if(null==t||t.length<=1)return"Quantidade de dados insuficiente para os cálculos";for(var a=t.split(",").map(function(t){return t.trim()}),e=0;e<a.length;e++)isNaN(a[e])&&n++,isNaN(a[e])||(i++,a[e]=parseFloat(a[e]));return n>0&&i>0?"Dados inválidos":a}},{}],4:[function(t,n,i){"use strict";i.init=function(t){var n=[];if("string"==typeof t[0])return"qualitativa";for(var i=0;i<t.length;i++)-1==n.indexOf(t[i])&&n.push(t[i]);return n.length<7?"discreta":n.length>=7&&n.length<=10?"pergunta":"continua"}},{}],5:[function(t,n,i){"use strict";i.init=function t(n){if(n.length<=1)return n;for(var i=n[0],a=[],e=[],r=1;r<n.length;r++)n[r]<i?a.push(n[r]):e.push(n[r]);return t(a).concat(i,t(e))}},{}],6:[function(t,n,i){"use strict";i.init=function(t){for(var n=[],i=[],a=[],e=0,r=0;r<t.length;r++)-1==n.indexOf(t[r])&&n.push(t[r]);for(var o=0;o<n.length;o++){for(var u=0;u<t.length;u++)n[o]==t[u]&&e++;i.push(e),e=0}return a.push(i,n),a}},{}],7:[function(t,n,i){"use strict";i.init=function(t){var n=t[t.length-1]-t[0]+1,i=0,a=0,e=void 0,r=Math.sqrt(n),o={};do{n%(Math.round(r)-1)==0?(e=n/(a=n/(Math.round(r)-1)),i++):n%Math.round(r)==0?(e=n/(a=n/Math.round(r)),i++):n%(Math.round(r)+1)==0&&(e=n/(a=n/(Math.round(r)+1)),i++),n++}while(0==i);return o.intervalo=a,o.quantClasse=e,o}},{}],8:[function(t,n,i){"use strict";i.init=function(t,n){for(var i=[],a={},e=[],r=1,o=0;o<t.length;o++)t[o]<t[0]+n.intervalo*r?e.push(t[o]):(a["classe"+r]=e,e=[t[o]],r++);a["classe"+r]=e;for(var u=0,s=1;s<=n.quantClasse;s++)i.push((t[0]+n.intervalo*(s-1)+t[0]+n.intervalo*s)/2*a["classe"+s].length),u+=i[s-1];return u/t.length}},{}],9:[function(t,n,i){"use strict";i.init=function(t){for(var n=0,i=0;i<t.length;i++)n+=t[i];return n/t.length}},{}],10:[function(t,n,i){"use strict";i.init=function(t){var n=0,i=[];return t.length%2==0?t[n=t.length/2-1]!=t[n+1]?(i.push(t[n]),i.push(t[n+1]),i):t[n]:t[n=Math.round(t.length/2-1)]}},{}],11:[function(t,n,i){"use strict";i.init=function(t,n,i){for(var a=t.length/2,e=t[Math.round(a)],r={},o=void 0,u=void 0,s=void 0,l=[],d=1,c=0;c<t.length;c++)t[c]<t[0]+i.intervalo*d?l.push(t[c]):(r["classe"+d]=l,l=[t[c]],d++);r["classe"+d]=l;for(var v=0;v<i.quantClasse;v++)if(-1!=r["classe"+(v+1)].indexOf(e)){o=t[0]+i.intervalo*v,u=0==v?0:n[v-1],s=r["classe"+(v+1)].length;break}var f=o+(a-u)/s*i.intervalo;return console.log(o,u,a,s,i.intervalo),f}},{}],12:[function(t,n,i){"use strict";i.init=function(t){var n=0;return t.length%2==0?t[n=t.length/2-1]!=t[n+1]?(t[n]+t[n+1])/2:t[n]:t[n=Math.round(t.length/2-1)]}},{}],13:[function(t,n,i){"use strict";i.init=function(t,n){var i=t.length*n/10;return t[Math.round(i)-1]}},{}],14:[function(t,n,i){"use strict";i.init=function(t,n){var i=t.length*n/100;return t[Math.round(i)-1]}},{}],15:[function(t,n,i){"use strict";i.init=function(t,n){return 1==n?t[Math.round(1*t.length/4)-1]:2==n?t[Math.round(2*t.length/4)-1]:3==n?t[Math.round(3*t.length/4)-1]:void 0}},{}],16:[function(t,n,i){"use strict";i.init=function(t,n){return 1==n?t[Math.round(1*t.length/5)-1]:2==n?t[Math.round(2*t.length/5)-1]:3==n?t[Math.round(3*t.length/5)-1]:4==n?t[Math.round(4*t.length/5)-1]:void 0}},{}],17:[function(t,n,i){"use strict";i.init=function(t){for(var n=t[0],i=t[1],a=[],e=n[0],r=0,o=0;o<n.length;o++)if(n[o]>=e){r=e,e=n[o];for(var u=0;u<a.length;u++)r<e&&a.pop();a.push(i[o])}return a}},{}],18:[function(t,n,i){"use strict";i.init=function(t,n){for(var i={},a=[],e=1,r=void 0,o=void 0,u=0;u<t.length;u++)t[u]<t[0]+n.intervalo*e?a.push(t[u]):(i["classe"+e]=a,a=[t[u]],e++);i["classe"+e]=a,r=1,o=i.classe1.length;for(var s=1;s<n.quantClasse;s++)i["classe"+(s+1)].length>o&&(r=s+1,o=i["classe"+(s+1)].length);return(t[0]+n.intervalo*(r-1)+(t[0]+n.intervalo*r))/2}},{}],19:[function(t,n,i){"use strict";i.init=function(t){for(var n=t[0],i=t[1],a=[],e=n[0],r=0,o=0;o<n.length;o++)if(n[o]>=e){r=e,e=n[o];for(var u=0;u<a.length;u++)r<e&&a.pop();a.push(i[o])}return a}},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
