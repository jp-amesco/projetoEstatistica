!function(){return function t(n,i,r){function e(u,s){if(!i[u]){if(!n[u]){var o="function"==typeof require&&require;if(!s&&o)return o(u,!0);if(a)return a(u,!0);var d=new Error("Cannot find module '"+u+"'");throw d.code="MODULE_NOT_FOUND",d}var c=i[u]={exports:{}};n[u][0].call(c.exports,function(t){return e(n[u][1][t]||t)},c,c.exports,t,n,i,r)}return i[u].exports}for(var a="function"==typeof require&&require,u=0;u<r.length;u++)e(r[u]);return e}}()({1:[function(t,n,i){"use strict";var r=t("./dados/entradaDados.js"),e=t("./dados/identificaVariavel.js"),a=t("./moda/modaQualitativa.js"),u=(t("./medidasSeparatrizes/quartil.js"),t("./medidasSeparatrizes/quintil.js"),t("./medidasSeparatrizes/decil.js"),t("./medidasSeparatrizes/percentil.js"),t("./frequencia.js"));t("./media/mediaQuantitativaDiscreta.js"),t("./mediana/medianaQuantitativaDiscreta.js"),t("./intervaloClasse.js"),t("./moda/modaQuantitativaDiscreta.js");document.querySelector(".btn").addEventListener("click",function(){var t=document.querySelector("#dados").value,n=r.init(t),i=void 0;if(1==n||2==n);else{i=e.init(n),n.sort();var s=u.init(n);"qualitativa"==i&&a.init(s)}})},{"./dados/entradaDados.js":2,"./dados/identificaVariavel.js":3,"./frequencia.js":4,"./intervaloClasse.js":5,"./media/mediaQuantitativaDiscreta.js":6,"./mediana/medianaQuantitativaDiscreta.js":7,"./medidasSeparatrizes/decil.js":8,"./medidasSeparatrizes/percentil.js":9,"./medidasSeparatrizes/quartil.js":10,"./medidasSeparatrizes/quintil.js":11,"./moda/modaQualitativa.js":12,"./moda/modaQuantitativaDiscreta.js":13}],2:[function(t,n,i){"use strict";i.init=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,n=0,i=0;if(null==t||t.length<=1)return"Quantidade de dados insuficiente para os cálculos";for(var r=t.split(",").map(function(t){return t.trim()}),e=0;e<r.length;e++)isNaN(r[e])&&n++,isNaN(r[e])||(i++,r[e]=parseInt(r[e]));return n>0&&i>0?"Dados inválidos":r}},{}],3:[function(t,n,i){"use strict";i.init=function(t){var n=[];if("string"==typeof t[0])return"qualitativa";for(var i=0;i<t.length;i++)-1==n.indexOf(t[i])&&n.push(t[i]);return n.length<7?"discreta":n.length>=7&&n.length<=10?"pergunta":"continua"}},{}],4:[function(t,n,i){"use strict";i.init=function(t){for(var n=[],i=[],r=[],e=0,a=0;a<t.length;a++)-1==n.indexOf(t[a])&&n.push(t[a]);for(var u=0;u<n.length;u++){for(var s=0;s<t.length;s++)n[u]==t[s]&&e++;i.push(e),e=0}return r.push(i,n),r}},{}],5:[function(t,n,i){"use strict";i.init=function(t){var n=t[t.length-1]-t[0]+1,i=Math.sqrt(n),r=0,e=0;do{n%(Math.round(i)-1)==0?(e=n/(Math.round(i)-1),r++):n%Math.round(i)==0?(e=n/Math.round(i),r++):n%(Math.round(i)+1)==0&&(e=n/(Math.round(i)+1),r++),n++}while(0==r);return e}},{}],6:[function(t,n,i){"use strict";i.init=function(t){for(var n=0,i=0;i<t.length;i++)n+=t[i];return n/t.length}},{}],7:[function(t,n,i){"use strict";i.init=function(t){var n=0;return t.length%2==0?t[n=t.length/2-1]!=t[n+1]?(t[n]+t[n+1])/2:t[n]:t[n=Math.round(t.length/2-1)]}},{}],8:[function(t,n,i){"use strict";i.init=function(t,n){var i=t.length*n/10;return t[Math.round(i)-1]}},{}],9:[function(t,n,i){"use strict";i.init=function(t,n){var i=t.length*n/100;return t[Math.round(i)-1]}},{}],10:[function(t,n,i){"use strict";i.init=function(t,n){return 1==n?t[Math.round(1*t.length/4)-1]:2==n?t[Math.round(2*t.length/4)-1]:3==n?t[Math.round(3*t.length/4)-1]:void 0}},{}],11:[function(t,n,i){"use strict";i.init=function(t,n){return 1==n?t[Math.round(1*t.length/5)-1]:2==n?t[Math.round(2*t.length/5)-1]:3==n?t[Math.round(3*t.length/5)-1]:4==n?t[Math.round(4*t.length/5)-1]:void 0}},{}],12:[function(t,n,i){"use strict";i.init=function(t){for(var n=t[0],i=t[1],r=n[0],e=void 0,a=0;a<n.length;a++)n[a]>r&&(r=n[a],e=i[a]);return e}},{}],13:[function(t,n,i){"use strict";i.init=function(t){for(var n=t[0],i=t[1],r=[],e=n[0],a=0;a<n.length;a++)n[a]>=e&&(e<(e=n[a])&&r.pop(),r.push(i[a]));return r}},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
