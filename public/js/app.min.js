!function(){return function t(n,r,e){function i(o,u){if(!r[o]){if(!n[o]){var s="function"==typeof require&&require;if(!u&&s)return s(o,!0);if(a)return a(o,!0);var d=new Error("Cannot find module '"+o+"'");throw d.code="MODULE_NOT_FOUND",d}var c=r[o]={exports:{}};n[o][0].call(c.exports,function(t){return i(n[o][1][t]||t)},c,c.exports,t,n,r,e)}return r[o].exports}for(var a="function"==typeof require&&require,o=0;o<e.length;o++)i(e[o]);return i}}()({1:[function(t,n,r){"use strict";var e=t("./dados/entradaDados.js");t("./dados/identificaVariavel.js"),t("./medidasSeparatrizes/quartil.js");document.querySelector(".btn").addEventListener("click",function(){var t=document.querySelector("#dados").value,n=e.init(t);n.sort()})},{"./dados/entradaDados.js":2,"./dados/identificaVariavel.js":3,"./medidasSeparatrizes/quartil.js":4}],2:[function(t,n,r){"use strict";r.init=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,n=0,r=0;if(null==t||t.length<=1)return"Quantidade de dados insuficiente para os cálculos";for(var e=t.split(",").map(function(t){return t.trim()}),i=0;i<e.length;i++)isNaN(e[i])&&n++,isNaN(e[i])||(r++,e[i]=parseInt(e[i]));return n>0&&r>0?"Dados inválidos":e}},{}],3:[function(t,n,r){"use strict";r.init=function(t){var n=[];if("string"==typeof t[0])return"qualitativa";for(var r=0;r<t.length;r++)-1==n.indexOf(t[r])&&n.push(t[r]);return n.length<7?"discreta":n.length>=7&&n.length<=10?"pergunta":"continua"}},{}],4:[function(t,n,r){"use strict";function e(){var t=[1,1,1,1,1,2,2,2,2,3,3,3,3,3,4,5,5,5,5];console.log(Math.round(t.length/4))}r.init=e;e()},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
