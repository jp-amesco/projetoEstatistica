!function(){return function e(t,n,a){function i(s,r){if(!n[s]){if(!t[s]){var l="function"==typeof require&&require;if(!r&&l)return l(s,!0);if(o)return o(s,!0);var d=new Error("Cannot find module '"+s+"'");throw d.code="MODULE_NOT_FOUND",d}var c=n[s]={exports:{}};t[s][0].call(c.exports,function(e){return i(t[s][1][e]||e)},c,c.exports,e,t,n,a)}return n[s].exports}for(var o="function"==typeof require&&require,s=0;s<a.length;s++)i(a[s]);return i}}()({1:[function(e,t,n){const a=e("./dados/entradaDados.js"),i=(e("./dados/importarDadosManual.js"),e("./dados/importaDadosArquivo.js")),o=(e("./dados/reinsercaoDados.js"),e("./frequencia.js")),s=e("./intervaloClasse.js"),r=e("./calculaFacContinua.js"),l=e("./dados/identificaVariavel.js"),d=e("./moda/modaQualitativa.js"),c=e("./moda/modaQuantitativaDiscreta.js"),u=e("./moda/modaQuantitativaContinua.js"),f=e("./media/mediaQuantitativaDiscreta.js"),m=e("./media/mediaQuantitativaContinua.js"),h=e("./mediana/medianaQuantitativaDiscreta.js"),p=e("./mediana/medianaQuantitativaContinua.js"),v=(e("./medidasSeparatrizes/medidasSeparatrizesDiscreta.js"),e("./mediana/medianaQualitativa.js")),g=e("./dados/organizacaoDados.js"),j=e("./desvioPadrao/desvioPadrao.js"),C=e("./desvioPadrao/desvioPadraoContinua.js"),q=(e("./medidasSeparatrizes/medidasSeparatrizesContinua.js"),e("./erros/mensagemErroValidacaoDados.js")),S=e("./dom/criaTabela.js"),y=e("./dom/criaGrafico.js"),L=e("./dom/colocaValor.js"),D=e("./criaDadosTabelaDiscreta.js"),b=e("./criaDadosTabelaContinua.js"),x=e("./dom/manipulaMedidasSeparatrizes.js"),M=e("./correlacao/correlacao.js"),E=e("./correlacao/regressao.js"),T=e("./calculaClassesContinua.js"),z=e("./dom/addEventButtons.js"),F=e("./dom/resultClickHomeButtons.js"),k=e("./correlacao/calculosCorrelacaoRegressao.js");F.init(z);const Q=document.querySelector("#dados");document.querySelector("#arquivo").addEventListener("change",function(e){e.preventDefault,i.init(this,Q)});const A=document.querySelectorAll(".pesquisa");for(let e=0;e<A.length;e++)A[e].addEventListener("click",function(e){e.preventDefault();const t=this.id;let n,i=a.init(Q.value);if(1==i||2==i)q.init(i);else{document.querySelector(".insercaoDados").classList.add("d-none"),n=l.init(i),i=g.init(i);const e=o.init(i);let q,z,F,Q,A,w;const P=s.init(i),N=T.init(i,P);let O;"qualitativa"==n?(q=d.init(e),F=v.init(i)):"discreta"==n?(q=c.init(e),z=f.init(i),F=h.init(i),w=j.init(e,z,t),A=D.init(e),S.init(A,n)):"continua"==n&&(Q=r.init(i,P),q=u.init(i,P),z=m.init(i,P),F=p.init(i,Q,P),w=C.init(i,z,t,P,N),A=b.init(N,P,i),S.init(A,n)),y.init(n,e),L.init(q,z,F,w);const H=document.querySelectorAll(".slider"),B=document.querySelectorAll(".output"),_=document.querySelectorAll(".result");x.init(H,_,i,B),document.querySelector("#menu-tabs").classList.remove("d-none"),document.querySelector("#valores").classList.remove("d-none"),document.querySelector(".enviar").addEventListener("click",function(e){e.preventDefault;let t=document.querySelector("#dependente"),n=document.querySelector("#independente");t=a.init(t.value),n=a.init(n.value);const i=k.init(t,n),o=M.init(i),s=E.init(i);console.log(s,o)}),O="tabela";const V=document.querySelectorAll(".nav-link");for(let e=0;e<V.length;e++)V[e].addEventListener("click",function(e){e.preventDefault,this.classList.add("active"),document.querySelector("#"+this.id).classList.add("active"),document.querySelector("."+O).classList.add("d-none"),document.querySelector("."+this.id).classList.remove("d-none"),document.querySelector("#"+O).classList.remove("active"),O=this.id})}})},{"./calculaClassesContinua.js":2,"./calculaFacContinua.js":3,"./correlacao/calculosCorrelacaoRegressao.js":4,"./correlacao/correlacao.js":5,"./correlacao/regressao.js":6,"./criaDadosTabelaContinua.js":7,"./criaDadosTabelaDiscreta.js":8,"./dados/entradaDados.js":9,"./dados/identificaVariavel.js":10,"./dados/importaDadosArquivo.js":11,"./dados/importarDadosManual.js":12,"./dados/organizacaoDados.js":13,"./dados/reinsercaoDados.js":14,"./desvioPadrao/desvioPadrao.js":15,"./desvioPadrao/desvioPadraoContinua.js":16,"./dom/addEventButtons.js":17,"./dom/colocaValor.js":18,"./dom/criaGrafico.js":19,"./dom/criaTabela.js":20,"./dom/manipulaMedidasSeparatrizes.js":21,"./dom/resultClickHomeButtons.js":22,"./erros/mensagemErroValidacaoDados.js":23,"./frequencia.js":24,"./intervaloClasse.js":25,"./media/mediaQuantitativaContinua.js":26,"./media/mediaQuantitativaDiscreta.js":27,"./mediana/medianaQualitativa.js":28,"./mediana/medianaQuantitativaContinua.js":29,"./mediana/medianaQuantitativaDiscreta.js":30,"./medidasSeparatrizes/medidasSeparatrizesContinua.js":31,"./medidasSeparatrizes/medidasSeparatrizesDiscreta.js":32,"./moda/modaQualitativa.js":33,"./moda/modaQuantitativaContinua.js":34,"./moda/modaQuantitativaDiscreta.js":35}],2:[function(e,t,n){n.init=function(e,t){let n=1,a=[];const i={};for(let o=0;o<e.length;o++)e[o]<e[0]+t.intervalo*n?a.push(e[o]):(i["classe"+n]=a,a=[e[o]],n++);return i["classe"+n]=a,i}},{}],3:[function(e,t,n){n.init=function(e,t){const n=[];let a=[],i=1;for(let o=0;o<e.length;o++)e[o]<e[0]+t.intervalo*i?a.push(e[o]):(0==n.length?n[0]=a.length:n[i-1]=a.length+n[i-2],i++,a=[e[o]]);return n[i-1]=a.length+n[i-2],n}},{}],4:[function(e,t,n){n.init=function(e,t){let n=0,a=0,i=0,o=0,s=0;for(let r=0;r<t.length;r++)a+=t[r],n+=e[r],i+=t[r]*e[r],s+=t[r]*t[r],o+=e[r]*e[r];return{dependente:e,independente:t,totindependente:a,totdependente:n,totMult:i,quad_independente:s,quad_dependente:o}}},{}],5:[function(e,t,n){n.init=function(e){const t=(e.independente.length*e.totMult-e.totdependente*e.totindependente)/Math.sqrt((e.independente.length*e.quad_dependente-e.totdependente**2)*(e.independente.length*e.quad_independente-e.totindependente**2));return console.log(t),100*t.toFixed(2)}},{}],6:[function(e,t,n){n.init=function(e){const t=((e.independente.length*e.totMult-e.totindependente*e.totdependente)/(e.independente.length*e.quad_independente-e.totindependente**2)).toFixed(2),n=e.totdependente/e.dependente.length-(t*(e.totindependente/e.independente.length)).toFixed(2);let a=0,i="",o=0;return i="",-(a=(-(o=0)+n)/t).toFixed(2)}},{}],7:[function(e,t,n){e("./calculaClassesContinua.js"),e("./intervaloClasse.js");n.init=function(e,t,n){const a=[],i=["Classe"],o=["xi"],s=["fi"],r=["fr %"],l=["fac"],d=["fac %"];let c,u,f,m=1,h=e.classe1[0],p=0;for(c in e)i.push(t.quantClasse),f=h+"   ------|   "+(u=e.classe1[0]+t.intervalo*m),h=u,o.push(f),s.push(e[c].length),r.push((100*e[c].length/n.length).toFixed(2)+"%"),l.push(s[m]+p),p=l[m],d.push((100*l[m]/n.length).toFixed(2)+"%"),m++;return a.push(i,o,s,r,l,d),a}},{"./calculaClassesContinua.js":2,"./intervaloClasse.js":25}],8:[function(e,t,n){const a=["fr %"],i=["Fac"],o=["Fac %"];n.init=function(e){let t=[];const n=e[1].slice();n.unshift("xi");const s=e[0].slice();return s.unshift("fi"),function(e){let t=0;for(let n=1;n<e.length;n++)t+=e[n],i.push(t);for(let n=1;n<e.length;n++)a.push(parseFloat(e[n]/t*100).toFixed(2)+"%"),o.push(parseFloat(i[n]/t*100).toFixed(2)+"%")}(s),t=[n,s,a,i,o]}},{}],9:[function(e,t,n){n.init=function(e=null){let t=0,n=0;if(null==e||e.length<=1)return 1;const a=e.split(/[;,\ ]/gm).map(function(e){return e.trim()});for(let e=0;e<a.length;e++)isNaN(a[e])&&t++,isNaN(a[e])||(n++,a[e]=parseFloat(a[e]));return t>0&&n>0?2:a}},{}],10:[function(e,t,n){n.init=function(e){const t=[];if("string"==typeof e[0])return"qualitativa";for(let n=0;n<e.length;n++)-1==t.indexOf(e[n])&&t.push(e[n]);return t.length<7?"discreta":t.length>=7&&t.length<=10?"pergunta":"continua"}},{}],11:[function(e,t,n){n.init=function(e,t){const n=new FileReader;n.onload=function(e){t.value=t.value=e.target.result},n.readAsText(e.files[0])}},{}],12:[function(e,t,n){n.init=function(){}},{}],13:[function(e,t,n){n.init=function e(t){if(t.length<=1)return t;const n=t[0],a=[],i=[];for(let e=1;e<t.length;e++)t[e]<n?a.push(t[e]):i.push(t[e]);return e(a).concat(n,e(i))}},{}],14:[function(e,t,n){n.init=function(){}},{}],15:[function(e,t,n){n.init=function(e,t,n){const a=e[0],i=e[1];let o=0,s=0,r=0;for(let e=0;e<i.length;e++)o+=Math.pow(i[e]-t,2)*a[e],r+=a[e];return"SENSO"==n&&s++,(o=Math.sqrt(o/(r-s))).toFixed(2)}},{}],16:[function(e,t,n){n.init=function(e,t,n,a,i){const o=[],s=[];let r=0,l=0,d=0;for(let t=0;t<a.quantClasse;t++)s[t]=(e[0]+a.intervalo*t+e[0]+a.intervalo*(t+1))/2,o[t]=i["classe"+(t+1)].length,l+=o[t];for(let e=0;e<s.length;e++)d+=Math.pow(s[e]-t,2)*o[e];return"SENSO"==n&&r++,(d=Math.sqrt(d/(l-r))).toFixed(2)}},{}],17:[function(e,t,n){n.init=function(e,t,n,a){for(let a=0;a<e.length;a++)e[a].classList.add("disabled"),e[a].classList.contains("active")&&e[a].classList.remove("active"),t.classList.contains("d-none")||n.classList.add("d-none");document.querySelector("."+a).classList.add("active"),document.querySelector("#btn-iniciais").classList.add("d-none"),document.querySelector("#voltar").classList.remove("d-none")}},{}],18:[function(e,t,n){n.init=function(e,t,n,a){let i,o;const s=document.querySelectorAll(".title-valores");for(let r=0;r<s.length;r++){switch(s[r].id){case"moda":i=document.createElement("p"),o=document.createTextNode(e),i.appendChild(o),i.id="modaParagrafo";break;case"media":i=document.createElement("p"),o=document.createTextNode(t),i.appendChild(o),i.id="mediaParagrafo";break;case"mediana":i=document.createElement("p"),o=document.createTextNode(n),i.appendChild(o),i.id="medianaParagrafo";break;case"desvioPadrao":i=document.createElement("p"),o=document.createTextNode(a),i.appendChild(o),i.id="desvioParagrafo"}s[r].appendChild(i)}}},{}],19:[function(e,t,n){n.init=function(e,t){const n=function(e){return"qualitativa"==e?"PieChart":"ColumnChart"}(e),a=function(e,t,n=null,a=null,i=null){let o={};return"PieChart"==e?o={title:n}:"ColumnChart"==e&&"discreta"==t?o={title:n,hAxis:{title:a},vAxis:{labelBar:i}}:"ColumnChart"==e&&"continua"==t?o={width:800,height:400,title:n,hAxis:{title:a},vAxis:{labelBar:i},bar:{groupWidth:"100%"}}:void 0}(n,e,"teste","teste1","teste2");google.charts.load("current",{packages:["corechart"]}),google.charts.setOnLoadCallback(function(){const e=new google.visualization.DataTable;e.addColumn("string","Horizontal"),e.addColumn("number",null),e.addRows(i),new google.visualization[n](document.getElementById("myChart")).draw(e,a)});const i=function(e){const t=[];for(var n=0;n<e[0].length;n++){const a=[];a.push(e[1][n].toString(),e[0][n]),t[n]=a}return t}(t)}},{}],20:[function(e,t,n){n.init=function(e){let t;const n=document.querySelector(".table"),a=document.querySelector("#tbody");a&&n.removeChild(a);const i=document.createElement("tbody");i.id="tbody";for(let n=0;n<e[0].length;n++){const a=document.createElement("tr");for(let i=0;i<e.length;i++){if(0==n){t=document.createElement("th");const a=document.createTextNode(e[i][n]);t.appendChild(a)}else{t=document.createElement("td");const a=document.createTextNode(e[i][n]);t.appendChild(a)}a.appendChild(t)}i.appendChild(a)}n.appendChild(i)}},{}],21:[function(e,t,n){const a=e("../medidasSeparatrizes/medidasSeparatrizesDiscreta.js");n.init=function(e,t,n,i){for(let o=0;o<e.length;o++)e[o].value=1,t[o].innerHTML=a.init(n,e[o].value,e[o].max),i[o].innerHTML=e[o].value,e[o].addEventListener("input",function(e){i[o].innerHTML=this.value,t[o].innerHTML=a.init(n,this.value,this.max)})}},{"../medidasSeparatrizes/medidasSeparatrizesDiscreta.js":32}],22:[function(e,t,n){n.init=function(e){const t=document.querySelectorAll(".btn-inicio"),n=document.querySelector("#menu-tabs"),a=document.querySelector(".insercaoDados"),i=document.querySelector("#voltar");let o;for(let s=0;s<t.length;s++)t[s].addEventListener("click",function(t){switch(t.preventDefault,this.id){case"descritiva":a.classList.remove("d-none"),n.classList.contains("d-none")||n.classList.add("d-none"),document.querySelector("#btn-iniciais").classList.add("d-none"),i.classList.remove("d-none");break;case"probabilidade":n.classList.remove("d-none"),o=document.querySelectorAll(".not-probability"),e.init(o,n,a,this.id);break;case"correlacao":n.classList.remove("d-none"),o=document.querySelectorAll(".not-cr"),e.init(o,n,a,this.id)}});i.addEventListener("click",function(e){e.preventDefault,document.querySelector("#btn-iniciais").classList.remove("d-none"),this.classList.add("d-none")})}},{}],23:[function(e,t,n){n.init=function(e){const t=document.querySelector("#mensagem");1==e?(t.classList.add("alert-danger"),t.innerHTML="Quantidade de dados insulficiente. Reinsira os dados"):2==e&&(t.classList.add("alert-danger"),t.innerHTML="Dados incorretos. Insira apenas números ou apenas letras"),$("#mensagem").fadeIn("300",function(){window.setTimeout(function(){$("#mensagem").fadeOut()},5e3)})}},{}],24:[function(e,t,n){n.init=function(e){const t=[],n=[],a=[];let i=0;for(let n=0;n<e.length;n++)-1==t.indexOf(e[n])&&t.push(e[n]);for(let a=0;a<t.length;a++){for(let n=0;n<e.length;n++)t[a]==e[n]&&i++;n.push(i),i=0}return a.push(n,t),a}},{}],25:[function(e,t,n){n.init=function(e){let t,n=e[e.length-1]-e[0]+1,a=0,i=0;const o=Math.sqrt(n),s={};do{n%(Math.round(o)-1)==0?(t=n/(i=n/(Math.round(o)-1)),a++):n%Math.round(o)==0?(t=n/(i=n/Math.round(o)),a++):n%(Math.round(o)+1)==0&&(t=n/(i=n/(Math.round(o)+1)),a++),n++}while(0==a);return s.intervalo=i,s.quantClasse=t,s}},{}],26:[function(e,t,n){n.init=function(e,t){const n=[],a={};let i=[],o=1;for(let n=0;n<e.length;n++)e[n]<e[0]+t.intervalo*o?i.push(e[n]):(a["classe"+o]=i,i=[e[n]],o++);a["classe"+o]=i;let s=0;for(let i=1;i<=t.quantClasse;i++)n.push((e[0]+t.intervalo*(i-1)+e[0]+t.intervalo*i)/2*a["classe"+i].length),s+=n[i-1];return s/e.length}},{}],27:[function(e,t,n){n.init=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t/e.length}},{}],28:[function(e,t,n){n.init=function(e){let t=0;const n=[];return e.length%2==0?e[t=e.length/2-1]!=e[t+1]?(n.push(e[t]),n.push(e[t+1]),n):e[t]:e[t=Math.round(e.length/2-1)]}},{}],29:[function(e,t,n){n.init=function(e,t,n){const a=e.length/2,i=e[Math.round(a)],o={};let s,r,l,d=[],c=1;for(let t=0;t<e.length;t++)e[t]<e[0]+n.intervalo*c?d.push(e[t]):(o["classe"+c]=d,d=[e[t]],c++);o["classe"+c]=d;for(let a=0;a<n.quantClasse;a++)if(-1!=o["classe"+(a+1)].indexOf(i)){s=e[0]+n.intervalo*a,r=0==a?0:t[a-1],l=o["classe"+(a+1)].length;break}return s+(a-r)/l*n.intervalo}},{}],30:[function(e,t,n){n.init=function(e){let t=0;return e.length%2==0?e[t=e.length/2-1]!=e[t+1]?(e[t]+e[t+1])/2:e[t]:e[t=Math.round(e.length/2-1)]}},{}],31:[function(e,t,n){n.init=function(e,t,n,a,i,o){const s=e.length*a/i,r=[],l=[];let d,c,u=Math.round(s);s-u<0&&u--;for(let t=0;t<Object.keys(o).length;t++)o["classe"+(t+1)].indexOf(e[u])>-1&&(c=t+1);for(let n=0;n<t.quantClasse;n++)r[n]=e[0]+t.intervalo*n,l[n]=o["classe"+(n+1)].length;return d=1==c?0:n[c-2],r[c-1]+(s-d)/l[c-1]*t.intervalo}},{}],32:[function(e,t,n){n.init=function(e,t,n){const a=Math.round(e.length*t/n);return 0==a?e[a]:e[a-1]}},{}],33:[function(e,t,n){n.init=function(e){const t=e[0],n=e[1],a=[];let i=t[0],o=0;for(let e=0;e<t.length;e++)if(t[e]>=i){o=i,i=t[e];for(let e=0;e<a.length;e++)o<i&&a.pop();a.push(n[e])}return a}},{}],34:[function(e,t,n){n.init=function(e,t){const n={};let a,i,o=[],s=1;for(let a=0;a<e.length;a++)e[a]<e[0]+t.intervalo*s?o.push(e[a]):(n["classe"+s]=o,o=[e[a]],s++);n["classe"+s]=o,a=1,i=n.classe1.length;for(let e=1;e<t.quantClasse;e++)n["classe"+(e+1)].length>i&&(a=e+1,i=n["classe"+(e+1)].length);return(e[0]+t.intervalo*(a-1)+(e[0]+t.intervalo*a))/2}},{}],35:[function(e,t,n){n.init=function(e){const t=e[0],n=e[1],a=[];let i=t[0],o=0;for(let e=0;e<t.length;e++)if(t[e]>=i){o=i,i=t[e];for(let e=0;e<a.length;e++)o<i&&a.pop();a.push(n[e])}return a}},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
