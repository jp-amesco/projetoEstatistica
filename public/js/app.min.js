!function(){return function r(n,e,t){function o(u,f){if(!e[u]){if(!n[u]){var a="function"==typeof require&&require;if(!f&&a)return a(u,!0);if(i)return i(u,!0);var c=new Error("Cannot find module '"+u+"'");throw c.code="MODULE_NOT_FOUND",c}var s=e[u]={exports:{}};n[u][0].call(s.exports,function(r){return o(n[u][1][r]||r)},s,s.exports,r,n,e,t)}return e[u].exports}for(var i="function"==typeof require&&require,u=0;u<t.length;u++)o(t[u]);return o}}()({1:[function(r,n,e){"use strict";var t=r("./dados/entradaDados.js");document.querySelector(".btn").addEventListener("click",function(){var r=document.querySelector("#dados").value;t.init(r)})},{"./dados/entradaDados.js":2}],2:[function(r,n,e){"use strict";e.init=function(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,n=0,e=0;if(null==r||r.length<=1)return"Quantidade de dados insuficiente para os c치lculos";for(var t=r.split(","),o=0;o<t.length;o++)isNaN(t[o])&&n++,isNaN(t[o])||(e++,t[o]=parseInt(t[o]));return n>0&&e>0?"Dados inv치lidos":t}},{}]},{},[1])(function(){return function r(n,e,t){function o(u,f){if(!e[u]){if(!n[u]){var a="function"==typeof require&&require;if(!f&&a)return a(u,!0);if(i)return i(u,!0);var c=new Error("Cannot find module '"+u+"'");throw c.code="MODULE_NOT_FOUND",c}var s=e[u]={exports:{}};n[u][0].call(s.exports,function(r){return o(n[u][1][r]||r)},s,s.exports,r,n,e,t)}return e[u].exports}for(var i="function"==typeof require&&require,u=0;u<t.length;u++)o(t[u]);return o}})()({1:[function(r,n,e){"use strict";e.init=function(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,n=0,e=0;if(null==r||r.length<=1)return"Quantidade de dados insuficiente para os c치lculos";for(var t=r.split(","),o=0;o<t.length;o++)isNaN(t[o])&&n++,isNaN(t[o])||(e++,t[o]=parseInt(t[o]));return n>0&&e>0?"Dados inv치lidos":t}},{}]},{},[1])(function(){return function r(n,e,t){function o(u,f){if(!e[u]){if(!n[u]){var a="function"==typeof require&&require;if(!f&&a)return a(u,!0);if(i)return i(u,!0);var c=new Error("Cannot find module '"+u+"'");throw c.code="MODULE_NOT_FOUND",c}var s=e[u]={exports:{}};n[u][0].call(s.exports,function(r){return o(n[u][1][r]||r)},s,s.exports,r,n,e,t)}return e[u].exports}for(var i="function"==typeof require&&require,u=0;u<t.length;u++)o(t[u]);return o}})()({1:[function(r,n,e){"use strict";e.init=function(r){var n=[];if("string"==typeof r[0])return"qualitativa";for(var e=0;e<r.length;e++)-1==n.indexOf(r[e])&&n.push(r[e]);return n.length<7?"discreta":n.length>=7&&n.length<=10?"pergunta":"continua"}},{}]},{},[1])(function(){return function r(n,e,t){function o(u,f){if(!e[u]){if(!n[u]){var a="function"==typeof require&&require;if(!f&&a)return a(u,!0);if(i)return i(u,!0);var c=new Error("Cannot find module '"+u+"'");throw c.code="MODULE_NOT_FOUND",c}var s=e[u]={exports:{}};n[u][0].call(s.exports,function(r){return o(n[u][1][r]||r)},s,s.exports,r,n,e,t)}return e[u].exports}for(var i="function"==typeof require&&require,u=0;u<t.length;u++)o(t[u]);return o}})()({1:[function(r,n,e){},{}]},{},[1])(function(){return function r(n,e,t){function o(u,f){if(!e[u]){if(!n[u]){var a="function"==typeof require&&require;if(!f&&a)return a(u,!0);if(i)return i(u,!0);var c=new Error("Cannot find module '"+u+"'");throw c.code="MODULE_NOT_FOUND",c}var s=e[u]={exports:{}};n[u][0].call(s.exports,function(r){return o(n[u][1][r]||r)},s,s.exports,r,n,e,t)}return e[u].exports}for(var i="function"==typeof require&&require,u=0;u<t.length;u++)o(t[u]);return o}})()({1:[function(r,n,e){},{}]},{},[1])(function(){return function r(n,e,t){function o(u,f){if(!e[u]){if(!n[u]){var a="function"==typeof require&&require;if(!f&&a)return a(u,!0);if(i)return i(u,!0);var c=new Error("Cannot find module '"+u+"'");throw c.code="MODULE_NOT_FOUND",c}var s=e[u]={exports:{}};n[u][0].call(s.exports,function(r){return o(n[u][1][r]||r)},s,s.exports,r,n,e,t)}return e[u].exports}for(var i="function"==typeof require&&require,u=0;u<t.length;u++)o(t[u]);return o}})()({1:[function(r,n,e){"use strict";e.init=function(r){for(var n=[],e=[],t=0,o=0;o<r.length;o++)-1==n.indexOf(r[o])&&n.push(r[o]);for(var i=0;i<n.length;i++){for(var u=0;u<r.length;u++)n[i]==r[u]&&t++;e.push(t),t=0}for(var f=void 0,a=e[0],c=0;c<e.length;c++)e[c]>a&&(a=e[c],f=c);return n[f]}},{}]},{},[1])(function(){return function r(n,e,t){function o(u,f){if(!e[u]){if(!n[u]){var a="function"==typeof require&&require;if(!f&&a)return a(u,!0);if(i)return i(u,!0);var c=new Error("Cannot find module '"+u+"'");throw c.code="MODULE_NOT_FOUND",c}var s=e[u]={exports:{}};n[u][0].call(s.exports,function(r){return o(n[u][1][r]||r)},s,s.exports,r,n,e,t)}return e[u].exports}for(var i="function"==typeof require&&require,u=0;u<t.length;u++)o(t[u]);return o}})()({1:[function(r,n,e){},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
