!function(){return function t(n,i,a){function r(u,o){if(!i[u]){if(!n[u]){var s="function"==typeof require&&require;if(!o&&s)return s(u,!0);if(e)return e(u,!0);var c=new Error("Cannot find module '"+u+"'");throw c.code="MODULE_NOT_FOUND",c}var d=i[u]={exports:{}};n[u][0].call(d.exports,function(t){return r(n[u][1][t]||t)},d,d.exports,t,n,i,a)}return i[u].exports}for(var e="function"==typeof require&&require,u=0;u<a.length;u++)r(a[u]);return r}}()({1:[function(t,n,i){"use strict";var a=t("./dados/entradaDados.js"),r=t("./dados/identificaVariavel.js"),e=t("./moda/modaQualitativa.js"),u=t("./frequencia.js");t("./media/mediaQuantitativaDiscreta.js"),t("./mediana/medianaQuantitativaDiscreta.js"),t("./moda/modaQuantitativaDiscreta.js");document.querySelector(".btn").addEventListener("click",function(){var t=document.querySelector("#dados").value,n=a.init(t),i=void 0;if(1==n||2==n);else{i=r.init(n),n.sort();var o=u.init(n);"qualitativa"==i&&e.init(o)}})},{"./dados/entradaDados.js":2,"./dados/identificaVariavel.js":3,"./frequencia.js":4,"./media/mediaQuantitativaDiscreta.js":5,"./mediana/medianaQuantitativaDiscreta.js":6,"./moda/modaQualitativa.js":7,"./moda/modaQuantitativaDiscreta.js":8}],2:[function(t,n,i){"use strict";i.init=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,n=0,i=0;if(null==t||t.length<=1)return"Quantidade de dados insuficiente para os cálculos";for(var a=t.split(",").map(function(t){return t.trim()}),r=0;r<a.length;r++)isNaN(a[r])&&n++,isNaN(a[r])||(i++,a[r]=parseInt(a[r]));return n>0&&i>0?"Dados inválidos":a}},{}],3:[function(t,n,i){"use strict";i.init=function(t){var n=[];if("string"==typeof t[0])return"qualitativa";for(var i=0;i<t.length;i++)-1==n.indexOf(t[i])&&n.push(t[i]);return n.length<7?"discreta":n.length>=7&&n.length<=10?"pergunta":"continua"}},{}],4:[function(t,n,i){"use strict";i.init=function(t){for(var n=[],i=[],a=[],r=0,e=0;e<t.length;e++)-1==n.indexOf(t[e])&&n.push(t[e]);for(var u=0;u<n.length;u++){for(var o=0;o<t.length;o++)n[u]==t[o]&&r++;i.push(r),r=0}return a.push(i,n),a}},{}],5:[function(t,n,i){"use strict";i.init=function(t){for(var n=0,i=0;i<t.length;i++)n+=t[i];return n/t.length}},{}],6:[function(t,n,i){"use strict";i.init=function(t){var n=0;return t.length%2==0?t[n=t.length/2-1]!=t[n+1]?(t[n]+t[n+1])/2:t[n]:t[n=Math.round(t.length/2-1)]}},{}],7:[function(t,n,i){"use strict";i.init=function(t){for(var n=t[0],i=t[1],a=n[0],r=void 0,e=0;e<n.length;e++)n[e]>a&&(a=n[e],r=i[e]);return r}},{}],8:[function(t,n,i){"use strict";i.init=function(t){for(var n=t[0],i=t[1],a=[],r=n[0],e=0;e<n.length;e++)n[e]>=r&&(r<(r=n[e])&&a.pop(),a.push(i[e]));return a}},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
