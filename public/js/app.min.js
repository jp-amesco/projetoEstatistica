!function(){return function t(i,n,e){function a(o,u){if(!n[o]){if(!i[o]){var s="function"==typeof require&&require;if(!u&&s)return s(o,!0);if(r)return r(o,!0);var l=new Error("Cannot find module '"+o+"'");throw l.code="MODULE_NOT_FOUND",l}var c=n[o]={exports:{}};i[o][0].call(c.exports,function(t){return a(i[o][1][t]||t)},c,c.exports,t,i,n,e)}return n[o].exports}for(var r="function"==typeof require&&require,o=0;o<e.length;o++)a(e[o]);return a}}()({1:[function(t,i,n){"use strict";var e=t("./dados/entradaDados.js"),a=t("./frequencia.js"),r=t("./intervaloClasse.js"),o=t("./calculaFacContinua.js"),u=t("./dados/identificaVariavel.js"),s=t("./moda/modaQualitativa.js"),l=t("./moda/modaQuantitativaDiscreta.js"),c=t("./moda/modaQuantitativaContinua.js"),d=t("./media/mediaQuantitativaDiscreta.js"),f=t("./mediana/medianaQuantitativaDiscreta.js"),v=t("./mediana/medianaQuantitativaContinua.js"),h=t("./medidasSeparatrizes/quartil.js"),g=t("./medidasSeparatrizes/quintil.js"),m=t("./medidasSeparatrizes/decil.js"),p=t("./medidasSeparatrizes/percentil.js");document.querySelector(".btn").addEventListener("click",function(){var t=document.querySelector("#dados").value,i=document.querySelector("#parte_quartil").value,n=document.querySelector("#parte_quintil").value,j=document.querySelector("#parte_decil").value,q=document.querySelector("#parte_percentil").value,S=e.init(t),Q=void 0;if(1==S||2==S);else{Q=u.init(S),S.sort();var C=a.init(S),D=void 0,M=void 0,y=void 0,z=void 0,x=void 0,N=void 0,O=void 0;if("qualitativa"==Q)D=s.init(C);else if("discreta"==Q)D=l.init(C),M=d.init(S),y=f.init(S),z=h.init(S,i),x=g.init(S,n),N=m.init(S,j),O=p.init(S,q);else if("continua"==Q){var _=r.init(S),F=o.init(S,_);D=c.init(S,_),y=v.init(S,F,_)}console.log("moda: ",D),console.log("media: ",M),console.log("mediana: ",y),console.log("quartil: ",z),console.log("quintil: ",x),console.log("decil: ",N),console.log("percentil: ",O)}})},{"./calculaFacContinua.js":2,"./dados/entradaDados.js":3,"./dados/identificaVariavel.js":4,"./frequencia.js":5,"./intervaloClasse.js":6,"./media/mediaQuantitativaDiscreta.js":7,"./mediana/medianaQuantitativaContinua.js":8,"./mediana/medianaQuantitativaDiscreta.js":9,"./medidasSeparatrizes/decil.js":10,"./medidasSeparatrizes/percentil.js":11,"./medidasSeparatrizes/quartil.js":12,"./medidasSeparatrizes/quintil.js":13,"./moda/modaQualitativa.js":14,"./moda/modaQuantitativaContinua.js":15,"./moda/modaQuantitativaDiscreta.js":16}],2:[function(t,i,n){"use strict";n.init=function(t,i){for(var n=[],e=[],a=1,r=0;r<t.length;r++)t[r]<t[0]+i.intervalo*a?e.push(t[r]):(0==n.length?n[0]=e.length:n[a-1]=e.length+n[a-2],a++,e=[t[r]]);return n[a-1]=e.length+n[a-2],n}},{}],3:[function(t,i,n){"use strict";n.init=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,i=0,n=0;if(null==t||t.length<=1)return"Quantidade de dados insuficiente para os cálculos";for(var e=t.split(",").map(function(t){return t.trim()}),a=0;a<e.length;a++)isNaN(e[a])&&i++,isNaN(e[a])||(n++,e[a]=parseFloat(e[a]));return i>0&&n>0?"Dados inválidos":e}},{}],4:[function(t,i,n){"use strict";n.init=function(t){var i=[];if("string"==typeof t[0])return"qualitativa";for(var n=0;n<t.length;n++)-1==i.indexOf(t[n])&&i.push(t[n]);return i.length<7?"discreta":i.length>=7&&i.length<=10?"pergunta":"continua"}},{}],5:[function(t,i,n){"use strict";n.init=function(t){for(var i=[],n=[],e=[],a=0,r=0;r<t.length;r++)-1==i.indexOf(t[r])&&i.push(t[r]);for(var o=0;o<i.length;o++){for(var u=0;u<t.length;u++)i[o]==t[u]&&a++;n.push(a),a=0}return e.push(n,i),e}},{}],6:[function(t,i,n){"use strict";n.init=function(t){var i=t[t.length-1]-t[0]+1;console.log(i)}},{}],7:[function(t,i,n){"use strict";n.init=function(t){for(var i=0,n=0;n<t.length;n++)i+=t[n];return i/t.length}},{}],8:[function(t,i,n){"use strict";n.init=function(t,i,n){for(var e=t.length/2,a=t[e],r={},o=void 0,u=void 0,s=void 0,l=[],c=1,d=0;d<t.length;d++)t[d]<t[0]+n.intervalo*c?l.push(t[d]):(r["classe"+c]=l,l=[t[d]],c++);r["classe"+c]=l;for(var f=0;f<n.quantClasse;f++)if(-1!=r["classe"+(f+1)].indexOf(a)){o=t[0]+n.intervalo*f,u=i[f-1],s=r["classe"+(f+1)].length;break}return o+(e-u)/s-n.intervalo}},{}],9:[function(t,i,n){"use strict";n.init=function(t){var i=0;return t.length%2==0?t[i=t.length/2-1]!=t[i+1]?(t[i]+t[i+1])/2:t[i]:t[i=Math.round(t.length/2-1)]}},{}],10:[function(t,i,n){"use strict";n.init=function(t,i){var n=t.length*i/10;return t[Math.round(n)-1]}},{}],11:[function(t,i,n){"use strict";n.init=function(t,i){var n=t.length*i/100;return t[Math.round(n)-1]}},{}],12:[function(t,i,n){"use strict";n.init=function(t,i){return 1==i?t[Math.round(1*t.length/4)-1]:2==i?t[Math.round(2*t.length/4)-1]:3==i?t[Math.round(3*t.length/4)-1]:void 0}},{}],13:[function(t,i,n){"use strict";n.init=function(t,i){return 1==i?t[Math.round(1*t.length/5)-1]:2==i?t[Math.round(2*t.length/5)-1]:3==i?t[Math.round(3*t.length/5)-1]:4==i?t[Math.round(4*t.length/5)-1]:void 0}},{}],14:[function(t,i,n){"use strict";n.init=function(t){for(var i=t[0],n=t[1],e=i[0],a=void 0,r=0;r<i.length;r++)i[r]>e&&(e=i[r],a=n[r]);return a}},{}],15:[function(t,i,n){"use strict";n.init=function(t,i){for(var n={},e=[],a=1,r=void 0,o=void 0,u=0;u<t.length;u++)t[u]<t[0]+i.intervalo*a?e.push(t[u]):(n["classe"+a]=e,e=[t[u]],a++);n["classe"+a]=e,r=n.classe1,o=n.classe1.length;for(var s=1;s<i.quantClasses;s++)n["classe"+(s+1)].length>o&&(r=s+1,o=n["classe"+(s+1)].length);return(t[0]+i.intervalo*(r-1)+(t[0]+i.intervalo*r))/2}},{}],16:[function(t,i,n){"use strict";n.init=function(t){for(var i=t[0],n=t[1],e=[],a=i[0],r=0,o=0;o<i.length;o++)if(i[o]>=a){r=a,a=i[o];for(var u=0;u<e.length;u++)r<a&&e.pop();e.push(n[o])}return e}},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
