!function(){return function t(n,i,r){function e(u,o){if(!i[u]){if(!n[u]){var s="function"==typeof require&&require;if(!o&&s)return s(u,!0);if(a)return a(u,!0);var f=new Error("Cannot find module '"+u+"'");throw f.code="MODULE_NOT_FOUND",f}var d=i[u]={exports:{}};n[u][0].call(d.exports,function(t){return e(n[u][1][t]||t)},d,d.exports,t,n,i,r)}return i[u].exports}for(var a="function"==typeof require&&require,u=0;u<r.length;u++)e(r[u]);return e}}()({1:[function(t,n,i){"use strict";var r=t("./dados/entradaDados.js"),e=t("./dados/identificaVariavel.js"),a=t("./moda/modaQualitativa.js"),u=t("./frequencia.js");document.querySelector(".btn").addEventListener("click",function(){var t=document.querySelector("#dados").value,n=r.init(t),i=void 0;if(1==n||2==n);else{i=e.init(n),n.sort();var o=u.init(n);"qualitativa"==i&&a.init(o)}})},{"./dados/entradaDados.js":2,"./dados/identificaVariavel.js":3,"./frequencia.js":4,"./moda/modaQualitativa.js":5}],2:[function(t,n,i){"use strict";i.init=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,n=0,i=0;if(null==t||t.length<=1)return"Quantidade de dados insuficiente para os cálculos";for(var r=t.split(",").map(function(t){return t.trim()}),e=0;e<r.length;e++)isNaN(r[e])&&n++,isNaN(r[e])||(i++,r[e]=parseInt(r[e]));return n>0&&i>0?"Dados inválidos":r}},{}],3:[function(t,n,i){"use strict";i.init=function(t){var n=[];if("string"==typeof t[0])return"qualitativa";for(var i=0;i<t.length;i++)-1==n.indexOf(t[i])&&n.push(t[i]);return n.length<7?"discreta":n.length>=7&&n.length<=10?"pergunta":"continua"}},{}],4:[function(t,n,i){"use strict";i.init=function(t){for(var n=[],i=[],r=[],e=0,a=0;a<t.length;a++)-1==n.indexOf(t[a])&&n.push(t[a]);for(var u=0;u<n.length;u++){for(var o=0;o<t.length;o++)n[u]==t[o]&&e++;i.push(e),e=0}return r.push(i,n),r}},{}],5:[function(t,n,i){"use strict";i.init=function(t){for(var n=t[0],i=t[1],r=n[0],e=void 0,a=0;a<n.length;a++)n[a]>r&&(r=n[a],e=i[a]);return e}},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
