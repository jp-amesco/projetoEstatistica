!function(){return function t(e,n,a){function i(s,r){if(!n[s]){if(!e[s]){var l="function"==typeof require&&require;if(!r&&l)return l(s,!0);if(o)return o(s,!0);var c=new Error("Cannot find module '"+s+"'");throw c.code="MODULE_NOT_FOUND",c}var u=n[s]={exports:{}};e[s][0].call(u.exports,function(t){return i(e[s][1][t]||t)},u,u.exports,t,e,n,a)}return n[s].exports}for(var o="function"==typeof require&&require,s=0;s<a.length;s++)i(a[s]);return i}}()({1:[function(t,e,n){const a=t("./dados/entradaDados.js"),i=t("./frequencia.js"),o=t("./intervaloClasse.js"),s=t("./calculaFacContinua.js"),r=t("./dados/identificaVariavel.js"),l=t("./moda/modaQualitativa.js"),c=t("./moda/modaQuantitativaDiscreta.js"),u=t("./moda/modaQuantitativaContinua.js"),d=t("./media/mediaQuantitativaDiscreta.js"),f=t("./media/mediaQuantitativaContinua.js"),h=t("./mediana/medianaQuantitativaDiscreta.js"),m=t("./mediana/medianaQuantitativaContinua.js"),p=(t("./medidasSeparatrizes/medidasSeparatrizesDiscreta.js"),t("./mediana/medianaQualitativa.js")),g=t("./dados/organizacaoDados.js"),v=t("./desvioPadrao/desvioPadrao.js"),j=t("./desvioPadrao/desvioPadraoContinua.js"),C=(t("./medidasSeparatrizes/medidasSeparatrizesContinua.js"),t("./erros/mensagemErroValidacaoDados.js")),q=t("./dom/criaTabela.js"),S=t("./dom/criaGrafico.js"),D=t("./dom/colocaValor.js"),x=t("./criaDadosTabelaDiscreta.js"),y=t("./criaDadosTabelaContinua.js"),M=t("./dom/manipulaMedidasSeparatrizes.js"),b=t("./calculaClassesContinua.js");document.querySelector("#comece_agora").addEventListener("click",function(t){t.preventDefault(),document.querySelector("#comece_agora").classList.add("d-none"),document.querySelector("#todos_tipos_pesquisa").classList.remove("d-none");const e=document.querySelectorAll(".pesquisa");for(let t=0;t<e.length;t++)e[t].addEventListener("click",function(t){t.preventDefault();const e=document.querySelector("#dados").value,n=this.id;console.log(n);let L,T=a.init(e);if(1==T||2==T)C.init(T);else{L=r.init(T),T=g.init(T);const t=i.init(T);let e,a,C,z,E,Q;const P=o.init(T),F=b.init(T,P);let N;"qualitativa"==L?(e=l.init(t),C=p.init(T)):"discreta"==L?(e=c.init(t),a=d.init(T),C=h.init(T),Q=v.init(T,a,n),E=x.init(t),q.init(E,L),console.log(Q)):"continua"==L&&(z=s.init(T,P),e=u.init(T,P),a=f.init(T,P),C=m.init(T,z,P),Q=j.init(T,a,n,P,F),console.log(Q),E=y.init(F,P,T),q.init(E,L)),S.init(L,t),D.init(e,a,C,Q);const w=document.querySelectorAll(".slider"),O=document.querySelectorAll(".output"),k=document.querySelectorAll(".result");M.init(w,k,T,O),document.querySelector("#menu-tabs").classList.remove("d-none"),document.querySelector("#valores").classList.remove("d-none"),N="tabela";const A=document.querySelectorAll(".nav-link");for(let t=0;t<A.length;t++)A[t].addEventListener("click",function(t){t.preventDefault,this.classList.add("active"),document.querySelector("#"+this.id).classList.add("active"),document.querySelector("#"+N).classList.remove("active"),document.querySelector("."+N).classList.add("d-none"),document.querySelector("."+this.id).classList.remove("d-none"),N=this.id})}})})},{"./calculaClassesContinua.js":2,"./calculaFacContinua.js":3,"./criaDadosTabelaContinua.js":4,"./criaDadosTabelaDiscreta.js":5,"./dados/entradaDados.js":6,"./dados/identificaVariavel.js":7,"./dados/organizacaoDados.js":8,"./desvioPadrao/desvioPadrao.js":9,"./desvioPadrao/desvioPadraoContinua.js":10,"./dom/colocaValor.js":11,"./dom/criaGrafico.js":12,"./dom/criaTabela.js":13,"./dom/manipulaMedidasSeparatrizes.js":14,"./erros/mensagemErroValidacaoDados.js":15,"./frequencia.js":16,"./intervaloClasse.js":17,"./media/mediaQuantitativaContinua.js":18,"./media/mediaQuantitativaDiscreta.js":19,"./mediana/medianaQualitativa.js":20,"./mediana/medianaQuantitativaContinua.js":21,"./mediana/medianaQuantitativaDiscreta.js":22,"./medidasSeparatrizes/medidasSeparatrizesContinua.js":23,"./medidasSeparatrizes/medidasSeparatrizesDiscreta.js":24,"./moda/modaQualitativa.js":25,"./moda/modaQuantitativaContinua.js":26,"./moda/modaQuantitativaDiscreta.js":27}],2:[function(t,e,n){n.init=function(t,e){let n=1,a=[];const i={};for(let o=0;o<t.length;o++)t[o]<t[0]+e.intervalo*n?a.push(t[o]):(i["classe"+n]=a,a=[t[o]],n++);return i["classe"+n]=a,i}},{}],3:[function(t,e,n){n.init=function(t,e){const n=[];let a=[],i=1;for(let o=0;o<t.length;o++)t[o]<t[0]+e.intervalo*i?a.push(t[o]):(0==n.length?n[0]=a.length:n[i-1]=a.length+n[i-2],i++,a=[t[o]]);return n[i-1]=a.length+n[i-2],n}},{}],4:[function(t,e,n){t("./calculaClassesContinua.js"),t("./intervaloClasse.js");n.init=function(t,e,n){const a=[],i=["Classe"],o=["xi"],s=["fi"],r=["fr %"],l=["fac"],c=["fac %"];let u,d,f,h=1,m=t.classe1[0],p=0;for(u in t)i.push(e.quantClasse),f=m+"   ------|   "+(d=t.classe1[0]+e.intervalo*h),m=d,o.push(f),s.push(t[u].length),r.push((100*t[u].length/n.length).toFixed(2)+"%"),l.push(s[h]+p),p=l[h],c.push((100*l[h]/n.length).toFixed(2)+"%"),h++;return a.push(i,o,s,r,l,c),a}},{"./calculaClassesContinua.js":2,"./intervaloClasse.js":17}],5:[function(t,e,n){const a=["fr %"],i=["Fac"],o=["Fac %"];n.init=function(t){let e=[];const n=t[1].slice();n.unshift("xi");const s=t[0].slice();return s.unshift("fi"),function(t){let e=0;for(let n=1;n<t.length;n++)e+=t[n],i.push(e);for(let n=1;n<t.length;n++)a.push(parseFloat(t[n]/e*100).toFixed(2)+"%"),o.push(parseFloat(i[n]/e*100).toFixed(2)+"%")}(s),e=[n,s,a,i,o]}},{}],6:[function(t,e,n){n.init=function(t=null){let e=0,n=0;if(null==t||t.length<=1)return 1;const a=t.split(",").map(function(t){return t.trim()});for(let t=0;t<a.length;t++)isNaN(a[t])&&e++,isNaN(a[t])||(n++,a[t]=parseFloat(a[t]));return e>0&&n>0?2:a}},{}],7:[function(t,e,n){n.init=function(t){const e=[];if("string"==typeof t[0])return"qualitativa";for(let n=0;n<t.length;n++)-1==e.indexOf(t[n])&&e.push(t[n]);return e.length<7?"discreta":e.length>=7&&e.length<=10?"pergunta":"continua"}},{}],8:[function(t,e,n){n.init=function t(e){if(e.length<=1)return e;const n=e[0],a=[],i=[];for(let t=1;t<e.length;t++)e[t]<n?a.push(e[t]):i.push(e[t]);return t(a).concat(n,t(i))}},{}],9:[function(t,e,n){n.init=function(t,e,n){console.log(t);const a=t[0],i=t[1];let o=0,s=0,r=0;for(let t=0;t<i.length;t++)o+=Math.pow(i[t]-e,2)*a[t],r+=a[t];return"SENSO"==n&&s++,(o=Math.sqrt(o/(r-s))).toFixed(2)}},{}],10:[function(t,e,n){n.init=function(t,e,n,a,i){const o=[],s=[];let r=0,l=0,c=0;for(let e=0;e<a.quantClasse;e++)s[e]=(t[0]+a.intervalo*e+t[0]+a.intervalo*(e+1))/2,o[e]=i["classe"+(e+1)].length,l+=o[e];for(let t=0;t<s.length;t++)c+=Math.pow(s[t]-e,2)*o[t];return"SENSO"==n&&r++,(c=Math.sqrt(c/(l-r))).toFixed(2)}},{}],11:[function(t,e,n){n.init=function(t,e,n){let a,i;const o=document.querySelectorAll(".title-valores");for(let s=0;s<o.length;s++){switch(o[s].id){case"moda":a=document.createElement("p"),i=document.createTextNode(t),a.appendChild(i),a.id="modaParagrafo";break;case"media":a=document.createElement("p"),i=document.createTextNode(e),a.appendChild(i),a.id="mediaParagrafo";break;case"mediana":a=document.createElement("p"),i=document.createTextNode(n),a.appendChild(i),a.id="medianaParagrafo";break;case"desvioPadrao":a=document.createElement("p"),i=document.createTextNode("a"),a.appendChild(i),a.id="desvioParagrafo"}o[s].appendChild(a)}}},{}],12:[function(t,e,n){n.init=function(t,e){const n=function(t){return"qualitativa"==t?"PieChart":"ColumnChart"}(t),a=function(t,e,n=null,a=null,i=null){let o={};return"PieChart"==t?o={title:n}:"ColumnChart"==t&&"discreta"==e?o={title:n,hAxis:{title:a},vAxis:{labelBar:i}}:"ColumnChart"==t&&"continua"==e?o={width:800,height:400,title:n,hAxis:{title:a},vAxis:{labelBar:i},bar:{groupWidth:"100%"}}:void 0}(n,t,"teste","teste1","teste2");google.charts.load("current",{packages:["corechart"]}),google.charts.setOnLoadCallback(function(){const t=new google.visualization.DataTable;t.addColumn("string","Horizontal"),t.addColumn("number",null),t.addRows(i),new google.visualization[n](document.getElementById("myChart")).draw(t,a)});const i=function(t){const e=[];for(var n=0;n<t[0].length;n++){const a=[];a.push(t[1][n].toString(),t[0][n]),e[n]=a}return e}(e)}},{}],13:[function(t,e,n){n.init=function(t){let e;const n=document.querySelector(".table"),a=document.querySelector("#tbody");a&&n.removeChild(a);const i=document.createElement("tbody");i.id="tbody";for(let n=0;n<t[0].length;n++){const a=document.createElement("tr");for(let i=0;i<t.length;i++){if(0==n){e=document.createElement("th");const a=document.createTextNode(t[i][n]);e.appendChild(a)}else{e=document.createElement("td");const a=document.createTextNode(t[i][n]);e.appendChild(a)}a.appendChild(e)}i.appendChild(a)}n.appendChild(i)}},{}],14:[function(t,e,n){const a=t("../medidasSeparatrizes/medidasSeparatrizesDiscreta.js");n.init=function(t,e,n,i){for(let o=0;o<t.length;o++)t[o].value=1,e[o].innerHTML=a.init(n,t[o].value,t[o].max),i[o].innerHTML=t[o].value,t[o].addEventListener("input",function(t){i[o].innerHTML=this.value,e[o].innerHTML=a.init(n,this.value,this.max)})}},{"../medidasSeparatrizes/medidasSeparatrizesDiscreta.js":24}],15:[function(t,e,n){n.init=function(t){const e=document.querySelector("#mensagem");1==t?(e.classList.add("alert-danger"),e.innerHTML="Quantidade de dados insulficiente. Reinsira os dados"):2==t&&(e.classList.add("alert-danger"),e.innerHTML="Dados incorretos. Insira apenas nÃºmeros ou apenas letras"),$("#mensagem").fadeIn("300",function(){window.setTimeout(function(){$("#mensagem").fadeOut()},5e3)})}},{}],16:[function(t,e,n){n.init=function(t){const e=[],n=[],a=[];let i=0;for(let n=0;n<t.length;n++)-1==e.indexOf(t[n])&&e.push(t[n]);for(let a=0;a<e.length;a++){for(let n=0;n<t.length;n++)e[a]==t[n]&&i++;n.push(i),i=0}return a.push(n,e),a}},{}],17:[function(t,e,n){n.init=function(t){let e,n=t[t.length-1]-t[0]+1,a=0,i=0;const o=Math.sqrt(n),s={};do{n%(Math.round(o)-1)==0?(e=n/(i=n/(Math.round(o)-1)),a++):n%Math.round(o)==0?(e=n/(i=n/Math.round(o)),a++):n%(Math.round(o)+1)==0&&(e=n/(i=n/(Math.round(o)+1)),a++),n++}while(0==a);return s.intervalo=i,s.quantClasse=e,s}},{}],18:[function(t,e,n){n.init=function(t,e){const n=[],a={};let i=[],o=1;for(let n=0;n<t.length;n++)t[n]<t[0]+e.intervalo*o?i.push(t[n]):(a["classe"+o]=i,i=[t[n]],o++);a["classe"+o]=i;let s=0;for(let i=1;i<=e.quantClasse;i++)n.push((t[0]+e.intervalo*(i-1)+t[0]+e.intervalo*i)/2*a["classe"+i].length),s+=n[i-1];return s/t.length}},{}],19:[function(t,e,n){n.init=function(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}},{}],20:[function(t,e,n){n.init=function(t){let e=0;const n=[];return t.length%2==0?t[e=t.length/2-1]!=t[e+1]?(n.push(t[e]),n.push(t[e+1]),n):t[e]:t[e=Math.round(t.length/2-1)]}},{}],21:[function(t,e,n){n.init=function(t,e,n){const a=t.length/2,i=t[Math.round(a)],o={};let s,r,l,c=[],u=1;for(let e=0;e<t.length;e++)t[e]<t[0]+n.intervalo*u?c.push(t[e]):(o["classe"+u]=c,c=[t[e]],u++);o["classe"+u]=c;for(let a=0;a<n.quantClasse;a++)if(-1!=o["classe"+(a+1)].indexOf(i)){s=t[0]+n.intervalo*a,r=0==a?0:e[a-1],l=o["classe"+(a+1)].length;break}return s+(a-r)/l*n.intervalo}},{}],22:[function(t,e,n){n.init=function(t){let e=0;return t.length%2==0?t[e=t.length/2-1]!=t[e+1]?(t[e]+t[e+1])/2:t[e]:t[e=Math.round(t.length/2-1)]}},{}],23:[function(t,e,n){n.init=function(t,e,n,a,i,o){const s=t.length*a/i,r=[],l=[];let c,u,d=Math.round(s);s-d<0&&d--;for(let e=0;e<Object.keys(o).length;e++)o["classe"+(e+1)].indexOf(t[d])>-1&&(u=e+1);for(let n=0;n<e.quantClasse;n++)r[n]=t[0]+e.intervalo*n,l[n]=o["classe"+(n+1)].length;return c=1==u?0:n[u-2],r[u-1]+(s-c)/l[u-1]*e.intervalo}},{}],24:[function(t,e,n){n.init=function(t,e,n){const a=Math.round(t.length*e/n);return 0==a?t[a]:t[a-1]}},{}],25:[function(t,e,n){n.init=function(t){const e=t[0],n=t[1],a=[];let i=e[0],o=0;for(let t=0;t<e.length;t++)if(e[t]>=i){o=i,i=e[t];for(let t=0;t<a.length;t++)o<i&&a.pop();a.push(n[t])}return a}},{}],26:[function(t,e,n){n.init=function(t,e){const n={};let a,i,o=[],s=1;for(let a=0;a<t.length;a++)t[a]<t[0]+e.intervalo*s?o.push(t[a]):(n["classe"+s]=o,o=[t[a]],s++);n["classe"+s]=o,a=1,i=n.classe1.length;for(let t=1;t<e.quantClasse;t++)n["classe"+(t+1)].length>i&&(a=t+1,i=n["classe"+(t+1)].length);return(t[0]+e.intervalo*(a-1)+(t[0]+e.intervalo*a))/2}},{}],27:[function(t,e,n){n.init=function(t){const e=t[0],n=t[1],a=[];let i=e[0],o=0;for(let t=0;t<e.length;t++)if(e[t]>=i){o=i,i=e[t];for(let t=0;t<a.length;t++)o<i&&a.pop();a.push(n[t])}return a}},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
