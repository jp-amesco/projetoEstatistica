!function(){return function t(e,n,a){function i(o,s){if(!n[o]){if(!e[o]){var u="function"==typeof require&&require;if(!s&&u)return u(o,!0);if(r)return r(o,!0);var c=new Error("Cannot find module '"+o+"'");throw c.code="MODULE_NOT_FOUND",c}var d=n[o]={exports:{}};e[o][0].call(d.exports,function(t){return i(e[o][1][t]||t)},d,d.exports,t,e,n,a)}return n[o].exports}for(var r="function"==typeof require&&require,o=0;o<a.length;o++)i(a[o]);return i}}()({1:[function(t,e,n){"use strict";var a=t("./dados/entradaDados.js"),i=t("./frequencia.js"),r=(t("./intervaloClasse.js"),t("./calculaFacContinua.js"),t("./dados/identificaVariavel.js")),o=t("./moda/modaQualitativa.js"),s=t("./moda/modaQuantitativaDiscreta.js"),u=(t("./moda/modaQuantitativaContinua.js"),t("./media/mediaQuantitativaDiscreta.js")),c=(t("./media/mediaQuantitativaContinua.js"),t("./mediana/medianaQuantitativaDiscreta.js")),d=(t("./mediana/medianaQuantitativaContinua.js"),t("./mediana/medianaQualitativa.js")),l=t("./erros/mensagemErroValidacaoDados.js"),v=t("./criaTabela.js"),f=t("./criaDadosTabela.js");function h(t,e,n){for(var a=void 0,i=void 0,r=document.querySelectorAll(".title-valores"),o=0;o<r.length;o++){switch(r[o].id){case"moda":a=document.createElement("p"),i=document.createTextNode(t),a.appendChild(i);break;case"media":a=document.createElement("p"),i=document.createTextNode(e),a.appendChild(i);break;case"mediana":a=document.createElement("p"),i=document.createTextNode(n),a.appendChild(i);break;case"desvioPadrao":a=document.createElement("p"),i=document.createTextNode("a"),a.appendChild(i)}r[o].appendChild(a)}}document.querySelector("#comece_agora").addEventListener("click",function(t){t.preventDefault(),document.querySelector("#comece_agora").classList.add("d-none"),document.querySelector("#todos_tipos_pesquisa").classList.remove("d-none");for(var e=document.querySelectorAll(".pesquisa"),n=0;n<e.length;n++)e[n].addEventListener("click",function(t){t.preventDefault();var e=document.querySelector("#dados").value,n=a.init(e),m=void 0;1==n||2==n?l.init(n):function(){m=r.init(n);var t=i.init(n),e=void 0,a=void 0,l=void 0;"qualitativa"==m?(e=o.init(t),l=d.init(n)):"discreta"==m&&(e=s.init(t),a=u.init(n),l=c.init(n));var p=f.init(m,t);v.init(p,m),document.querySelector("#menu-tabs").classList.remove("d-none"),document.querySelector("#valores").classList.remove("d-none"),h(e,a,l);for(var g=document.querySelectorAll(".nav-link"),j=0;j<g.length;j++)g[j].addEventListener("click",function(e){e.preventDefault,"Tabela"==this.text&&(p=f.init(m,t),v.init(p,m))})}()})})},{"./calculaFacContinua.js":2,"./criaDadosTabela.js":3,"./criaTabela.js":4,"./dados/entradaDados.js":5,"./dados/identificaVariavel.js":6,"./erros/mensagemErroValidacaoDados.js":7,"./frequencia.js":8,"./intervaloClasse.js":9,"./media/mediaQuantitativaContinua.js":10,"./media/mediaQuantitativaDiscreta.js":11,"./mediana/medianaQualitativa.js":12,"./mediana/medianaQuantitativaContinua.js":13,"./mediana/medianaQuantitativaDiscreta.js":14,"./moda/modaQualitativa.js":15,"./moda/modaQuantitativaContinua.js":16,"./moda/modaQuantitativaDiscreta.js":17}],2:[function(t,e,n){"use strict";n.init=function(t,e){for(var n=[],a=[],i=1,r=0;r<t.length;r++)t[r]<t[0]+e.intervalo*i?a.push(t[r]):(0==n.length?n[0]=a.length:n[i-1]=a.length+n[i-2],i++,a=[t[r]]);return n[i-1]=a.length+n[i-2],n}},{}],3:[function(t,e,n){"use strict";var a=["fr %"],i=["Fac"],r=["Fac %"];n.init=function(t,e){var n=e[1];n.unshift("xi");var o=e[0];return o.unshift("fi"),function(t){for(var e=0,n=1;n<t.length;n++)e+=t[n],i.push(e);for(var o=1;o<t.length;o++)a.push(parseFloat(t[o]/e*100).toFixed(2)+"%"),r.push(parseFloat(i[o]/e*100).toFixed(2)+"%")}(o),[n,o,a,i,r]}},{}],4:[function(t,e,n){"use strict";n.init=function(t,e){var n=void 0;if("continua"==e);else{for(var a=document.querySelector(".table"),i=document.createElement("tbody"),r=0;r<t[0].length;r++){for(var o=document.createElement("tr"),s=0;s<t.length;s++){if(0==r){n=document.createElement("th");var u=document.createTextNode(t[s][r]);n.appendChild(u)}else{n=document.createElement("td");var c=document.createTextNode(t[s][r]);n.appendChild(c)}o.appendChild(n)}i.appendChild(o)}a.appendChild(i)}}},{}],5:[function(t,e,n){"use strict";n.init=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,e=0,n=0;if(null==t||t.length<=1)return 1;for(var a=t.split(",").map(function(t){return t.trim()}),i=0;i<a.length;i++)isNaN(a[i])&&e++,isNaN(a[i])||(n++,a[i]=parseFloat(a[i]));return e>0&&n>0?2:a}},{}],6:[function(t,e,n){"use strict";n.init=function(t){var e=[];if("string"==typeof t[0])return"qualitativa";for(var n=0;n<t.length;n++)-1==e.indexOf(t[n])&&e.push(t[n]);return e.length<7?"discreta":e.length>=7&&e.length<=10?"pergunta":"continua"}},{}],7:[function(t,e,n){"use strict";n.init=function(t){var e=document.querySelector("#mensagem");1==t?(e.classList.add("alert-danger"),e.innerHTML="Quantidade de dados insulficiente. Reinsira os dados"):2==t&&(e.classList.add("alert-danger"),e.innerHTML="Dados incorretos. Insira apenas nÃºmeros ou apenas letras"),$("#mensagem").fadeIn("300",function(){window.setTimeout(function(){$("#mensagem").fadeOut()},5e3)})}},{}],8:[function(t,e,n){"use strict";n.init=function(t){for(var e=[],n=[],a=[],i=0,r=0;r<t.length;r++)-1==e.indexOf(t[r])&&e.push(t[r]);for(var o=0;o<e.length;o++){for(var s=0;s<t.length;s++)e[o]==t[s]&&i++;n.push(i),i=0}return a.push(n,e),a}},{}],9:[function(t,e,n){"use strict";n.init=function(t){var e=t[t.length-1]-t[0]+1,n=0,a=0,i=void 0,r=Math.sqrt(e),o={};do{e%(Math.round(r)-1)==0?(i=e/(a=e/(Math.round(r)-1)),n++):e%Math.round(r)==0?(i=e/(a=e/Math.round(r)),n++):e%(Math.round(r)+1)==0&&(i=e/(a=e/(Math.round(r)+1)),n++),e++}while(0==n);return o.intervalo=a,o.quantClasse=i,o}},{}],10:[function(t,e,n){"use strict";n.init=function(t,e){for(var n=[],a={},i=[],r=1,o=0;o<t.length;o++)t[o]<t[0]+e.intervalo*r?i.push(t[o]):(a["classe"+r]=i,i=[t[o]],r++);a["classe"+r]=i;for(var s=0,u=1;u<=e.quantClasse;u++)n.push((t[0]+e.intervalo*(u-1)+t[0]+e.intervalo*u)/2*a["classe"+u].length),s+=n[u-1];return s/t.length}},{}],11:[function(t,e,n){"use strict";n.init=function(t){for(var e=0,n=0;n<t.length;n++)e+=t[n];return e/t.length}},{}],12:[function(t,e,n){"use strict";n.init=function(t){var e=0,n=[];return t.length%2==0?t[e=t.length/2-1]!=t[e+1]?(n.push(t[e]),n.push(t[e+1]),n):t[e]:t[e=Math.round(t.length/2-1)]}},{}],13:[function(t,e,n){"use strict";n.init=function(t,e,n){for(var a=t.length/2,i=t[Math.round(a)],r={},o=void 0,s=void 0,u=void 0,c=[],d=1,l=0;l<t.length;l++)t[l]<t[0]+n.intervalo*d?c.push(t[l]):(r["classe"+d]=c,c=[t[l]],d++);r["classe"+d]=c;for(var v=0;v<n.quantClasse;v++)if(-1!=r["classe"+(v+1)].indexOf(i)){o=t[0]+n.intervalo*v,s=0==v?0:e[v-1],u=r["classe"+(v+1)].length;break}var f=o+(a-s)/u*n.intervalo;return console.log(o,s,a,u,n.intervalo),f}},{}],14:[function(t,e,n){"use strict";n.init=function(t){var e=0;return t.length%2==0?t[e=t.length/2-1]!=t[e+1]?(t[e]+t[e+1])/2:t[e]:t[e=Math.round(t.length/2-1)]}},{}],15:[function(t,e,n){"use strict";n.init=function(t){for(var e=t[0],n=t[1],a=[],i=e[0],r=0,o=0;o<e.length;o++)if(e[o]>=i){r=i,i=e[o];for(var s=0;s<a.length;s++)r<i&&a.pop();a.push(n[o])}return a}},{}],16:[function(t,e,n){"use strict";n.init=function(t,e){for(var n={},a=[],i=1,r=void 0,o=void 0,s=0;s<t.length;s++)t[s]<t[0]+e.intervalo*i?a.push(t[s]):(n["classe"+i]=a,a=[t[s]],i++);n["classe"+i]=a,r=1,o=n.classe1.length;for(var u=1;u<e.quantClasse;u++)n["classe"+(u+1)].length>o&&(r=u+1,o=n["classe"+(u+1)].length);return(t[0]+e.intervalo*(r-1)+(t[0]+e.intervalo*r))/2}},{}],17:[function(t,e,n){"use strict";n.init=function(t){for(var e=t[0],n=t[1],a=[],i=e[0],r=0,o=0;o<e.length;o++)if(e[o]>=i){r=i,i=e[o];for(var s=0;s<a.length;s++)r<i&&a.pop();a.push(n[o])}return a}},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
