!function(){return function t(e,n,a){function i(s,r){if(!n[s]){if(!e[s]){var l="function"==typeof require&&require;if(!r&&l)return l(s,!0);if(o)return o(s,!0);var c=new Error("Cannot find module '"+s+"'");throw c.code="MODULE_NOT_FOUND",c}var d=n[s]={exports:{}};e[s][0].call(d.exports,function(t){return i(e[s][1][t]||t)},d,d.exports,t,e,n,a)}return n[s].exports}for(var o="function"==typeof require&&require,s=0;s<a.length;s++)i(a[s]);return i}}()({1:[function(t,e,n){n.init=function(t,e,n,a){for(let a=0;a<t.length;a++)t[a].classList.add("disabled"),t[a].classList.contains("active")&&t[a].classList.remove("active"),e.classList.contains("d-none")||n.classList.add("d-none");document.querySelector("."+a).classList.add("active")}},{}],2:[function(t,e,n){t("./dados/entradaDados.js"),t("./dados/importarDadosManual.js"),t("./dados/importaDadosArquivo.js"),t("./dados/reinsercaoDados.js"),t("./frequencia.js"),t("./intervaloClasse.js"),t("./calculaFacContinua.js"),t("./dados/identificaVariavel.js"),t("./moda/modaQualitativa.js"),t("./moda/modaQuantitativaDiscreta.js"),t("./moda/modaQuantitativaContinua.js"),t("./media/mediaQuantitativaDiscreta.js"),t("./media/mediaQuantitativaContinua.js"),t("./mediana/medianaQuantitativaDiscreta.js"),t("./mediana/medianaQuantitativaContinua.js"),t("./medidasSeparatrizes/medidasSeparatrizesDiscreta.js"),t("./mediana/medianaQualitativa.js"),t("./dados/organizacaoDados.js"),t("./desvioPadrao/desvioPadrao.js"),t("./desvioPadrao/desvioPadraoContinua.js"),t("./medidasSeparatrizes/medidasSeparatrizesContinua.js"),t("./erros/mensagemErroValidacaoDados.js"),t("./dom/criaTabela.js"),t("./dom/criaGrafico.js"),t("./dom/colocaValor.js"),t("./criaDadosTabelaDiscreta.js"),t("./criaDadosTabelaContinua.js"),t("./dom/manipulaMedidasSeparatrizes.js"),t("./correlacao/correlacao.js"),t("./correlacao/regressao.js"),t("./calculaClassesContinua.js");const a=t("./addEventButtons.js"),i=document.querySelectorAll(".btn-inicio"),o=document.querySelector("#menu-tabs"),s=document.querySelector(".insercaoDados");let r;for(let t=0;t<i.length;t++)i[t].addEventListener("click",function(t){switch(t.preventDefault,this.id){case"descritiva":s.classList.remove("d-none"),o.classList.contains("d-none")||o.classList.add("d-none");break;case"probabilidade":o.classList.remove("d-none"),r=document.querySelectorAll(".not-probability"),a.init(r,o,s,this.id);break;case"correlacao":o.classList.remove("d-none"),r=document.querySelectorAll(".not-cr"),a.init(r,o,s,this.id)}})},{"./addEventButtons.js":1,"./calculaClassesContinua.js":3,"./calculaFacContinua.js":4,"./correlacao/correlacao.js":5,"./correlacao/regressao.js":6,"./criaDadosTabelaContinua.js":7,"./criaDadosTabelaDiscreta.js":8,"./dados/entradaDados.js":9,"./dados/identificaVariavel.js":10,"./dados/importaDadosArquivo.js":11,"./dados/importarDadosManual.js":12,"./dados/organizacaoDados.js":13,"./dados/reinsercaoDados.js":14,"./desvioPadrao/desvioPadrao.js":15,"./desvioPadrao/desvioPadraoContinua.js":16,"./dom/colocaValor.js":17,"./dom/criaGrafico.js":18,"./dom/criaTabela.js":19,"./dom/manipulaMedidasSeparatrizes.js":20,"./erros/mensagemErroValidacaoDados.js":21,"./frequencia.js":22,"./intervaloClasse.js":23,"./media/mediaQuantitativaContinua.js":24,"./media/mediaQuantitativaDiscreta.js":25,"./mediana/medianaQualitativa.js":26,"./mediana/medianaQuantitativaContinua.js":27,"./mediana/medianaQuantitativaDiscreta.js":28,"./medidasSeparatrizes/medidasSeparatrizesContinua.js":29,"./medidasSeparatrizes/medidasSeparatrizesDiscreta.js":30,"./moda/modaQualitativa.js":31,"./moda/modaQuantitativaContinua.js":32,"./moda/modaQuantitativaDiscreta.js":33}],3:[function(t,e,n){n.init=function(t,e){let n=1,a=[];const i={};for(let o=0;o<t.length;o++)t[o]<t[0]+e.intervalo*n?a.push(t[o]):(i["classe"+n]=a,a=[t[o]],n++);return i["classe"+n]=a,i}},{}],4:[function(t,e,n){n.init=function(t,e){const n=[];let a=[],i=1;for(let o=0;o<t.length;o++)t[o]<t[0]+e.intervalo*i?a.push(t[o]):(0==n.length?n[0]=a.length:n[i-1]=a.length+n[i-2],i++,a=[t[o]]);return n[i-1]=a.length+n[i-2],n}},{}],5:[function(t,e,n){n.init=function(t,e){let n=0,a=0,i=0,o=0,s=0,r=0;for(let r=0;r<e.length;r++)a+=e[r],n+=t[r],i+=e[r]*t[r],s+=e[r]*e[r],o+=t[r]*t[r];return 100*(r=(e.length*i-n*a)/Math.sqrt((e.length*o-n**2)*(e.length*s-a**2))).toFixed(2)}},{}],6:[function(t,e,n){n.init=function(t,e,n,a,i,o,s){const r=((e.length*i-a*n)/(e.length*s-a**2)).toFixed(2),l=n/t.length-(r*(a/e.length)).toFixed(2);let c,d=0,u="";return u="",-(d=(-(c=0)+l)/r).toFixed(2)}},{}],7:[function(t,e,n){t("./calculaClassesContinua.js"),t("./intervaloClasse.js");n.init=function(t,e,n){const a=[],i=["Classe"],o=["xi"],s=["fi"],r=["fr %"],l=["fac"],c=["fac %"];let d,u,f,h=1,m=t.classe1[0],g=0;for(d in t)i.push(e.quantClasse),f=m+"   ------|   "+(u=t.classe1[0]+e.intervalo*h),m=u,o.push(f),s.push(t[d].length),r.push((100*t[d].length/n.length).toFixed(2)+"%"),l.push(s[h]+g),g=l[h],c.push((100*l[h]/n.length).toFixed(2)+"%"),h++;return a.push(i,o,s,r,l,c),a}},{"./calculaClassesContinua.js":3,"./intervaloClasse.js":23}],8:[function(t,e,n){const a=["fr %"],i=["Fac"],o=["Fac %"];n.init=function(t){let e=[];const n=t[1].slice();n.unshift("xi");const s=t[0].slice();return s.unshift("fi"),function(t){let e=0;for(let n=1;n<t.length;n++)e+=t[n],i.push(e);for(let n=1;n<t.length;n++)a.push(parseFloat(t[n]/e*100).toFixed(2)+"%"),o.push(parseFloat(i[n]/e*100).toFixed(2)+"%")}(s),e=[n,s,a,i,o]}},{}],9:[function(t,e,n){n.init=function(t=null){let e=0,n=0;if(null==t||t.length<=1)return 1;const a=t.split(",").map(function(t){return t.trim()});for(let t=0;t<a.length;t++)isNaN(a[t])&&e++,isNaN(a[t])||(n++,a[t]=parseFloat(a[t]));return e>0&&n>0?2:a}},{}],10:[function(t,e,n){n.init=function(t){const e=[];if("string"==typeof t[0])return"qualitativa";for(let n=0;n<t.length;n++)-1==e.indexOf(t[n])&&e.push(t[n]);return e.length<7?"discreta":e.length>=7&&e.length<=10?"pergunta":"continua"}},{}],11:[function(t,e,n){n.init=function(t,e){const n=new FileReader;n.onload=function(t){e.value=e.value=t.target.result},n.readAsText(t.files[0])}},{}],12:[function(t,e,n){n.init=function(){}},{}],13:[function(t,e,n){n.init=function t(e){if(e.length<=1)return e;const n=e[0],a=[],i=[];for(let t=1;t<e.length;t++)e[t]<n?a.push(e[t]):i.push(e[t]);return t(a).concat(n,t(i))}},{}],14:[function(t,e,n){n.init=function(){}},{}],15:[function(t,e,n){n.init=function(t,e,n){const a=t[0],i=t[1];let o=0,s=0,r=0;for(let t=0;t<i.length;t++)o+=Math.pow(i[t]-e,2)*a[t],r+=a[t];return"SENSO"==n&&s++,(o=Math.sqrt(o/(r-s))).toFixed(2)}},{}],16:[function(t,e,n){n.init=function(t,e,n,a,i){const o=[],s=[];let r=0,l=0,c=0;for(let e=0;e<a.quantClasse;e++)s[e]=(t[0]+a.intervalo*e+t[0]+a.intervalo*(e+1))/2,o[e]=i["classe"+(e+1)].length,l+=o[e];for(let t=0;t<s.length;t++)c+=Math.pow(s[t]-e,2)*o[t];return"SENSO"==n&&r++,(c=Math.sqrt(c/(l-r))).toFixed(2)}},{}],17:[function(t,e,n){n.init=function(t,e,n,a){let i,o;const s=document.querySelectorAll(".title-valores");for(let r=0;r<s.length;r++){switch(s[r].id){case"moda":i=document.createElement("p"),o=document.createTextNode(t),i.appendChild(o),i.id="modaParagrafo";break;case"media":i=document.createElement("p"),o=document.createTextNode(e),i.appendChild(o),i.id="mediaParagrafo";break;case"mediana":i=document.createElement("p"),o=document.createTextNode(n),i.appendChild(o),i.id="medianaParagrafo";break;case"desvioPadrao":i=document.createElement("p"),o=document.createTextNode(a),i.appendChild(o),i.id="desvioParagrafo"}s[r].appendChild(i)}}},{}],18:[function(t,e,n){n.init=function(t,e){const n=function(t){return"qualitativa"==t?"PieChart":"ColumnChart"}(t),a=function(t,e,n=null,a=null,i=null){let o={};return"PieChart"==t?o={title:n}:"ColumnChart"==t&&"discreta"==e?o={title:n,hAxis:{title:a},vAxis:{labelBar:i}}:"ColumnChart"==t&&"continua"==e?o={width:800,height:400,title:n,hAxis:{title:a},vAxis:{labelBar:i},bar:{groupWidth:"100%"}}:void 0}(n,t,"teste","teste1","teste2");google.charts.load("current",{packages:["corechart"]}),google.charts.setOnLoadCallback(function(){const t=new google.visualization.DataTable;t.addColumn("string","Horizontal"),t.addColumn("number",null),t.addRows(i),new google.visualization[n](document.getElementById("myChart")).draw(t,a)});const i=function(t){const e=[];for(var n=0;n<t[0].length;n++){const a=[];a.push(t[1][n].toString(),t[0][n]),e[n]=a}return e}(e)}},{}],19:[function(t,e,n){n.init=function(t){let e;const n=document.querySelector(".table"),a=document.querySelector("#tbody");a&&n.removeChild(a);const i=document.createElement("tbody");i.id="tbody";for(let n=0;n<t[0].length;n++){const a=document.createElement("tr");for(let i=0;i<t.length;i++){if(0==n){e=document.createElement("th");const a=document.createTextNode(t[i][n]);e.appendChild(a)}else{e=document.createElement("td");const a=document.createTextNode(t[i][n]);e.appendChild(a)}a.appendChild(e)}i.appendChild(a)}n.appendChild(i)}},{}],20:[function(t,e,n){const a=t("../medidasSeparatrizes/medidasSeparatrizesDiscreta.js");n.init=function(t,e,n,i){for(let o=0;o<t.length;o++)t[o].value=1,e[o].innerHTML=a.init(n,t[o].value,t[o].max),i[o].innerHTML=t[o].value,t[o].addEventListener("input",function(t){i[o].innerHTML=this.value,e[o].innerHTML=a.init(n,this.value,this.max)})}},{"../medidasSeparatrizes/medidasSeparatrizesDiscreta.js":30}],21:[function(t,e,n){n.init=function(t){const e=document.querySelector("#mensagem");1==t?(e.classList.add("alert-danger"),e.innerHTML="Quantidade de dados insulficiente. Reinsira os dados"):2==t&&(e.classList.add("alert-danger"),e.innerHTML="Dados incorretos. Insira apenas nÃºmeros ou apenas letras"),$("#mensagem").fadeIn("300",function(){window.setTimeout(function(){$("#mensagem").fadeOut()},5e3)})}},{}],22:[function(t,e,n){n.init=function(t){const e=[],n=[],a=[];let i=0;for(let n=0;n<t.length;n++)-1==e.indexOf(t[n])&&e.push(t[n]);for(let a=0;a<e.length;a++){for(let n=0;n<t.length;n++)e[a]==t[n]&&i++;n.push(i),i=0}return a.push(n,e),a}},{}],23:[function(t,e,n){n.init=function(t){let e,n=t[t.length-1]-t[0]+1,a=0,i=0;const o=Math.sqrt(n),s={};do{n%(Math.round(o)-1)==0?(e=n/(i=n/(Math.round(o)-1)),a++):n%Math.round(o)==0?(e=n/(i=n/Math.round(o)),a++):n%(Math.round(o)+1)==0&&(e=n/(i=n/(Math.round(o)+1)),a++),n++}while(0==a);return s.intervalo=i,s.quantClasse=e,s}},{}],24:[function(t,e,n){n.init=function(t,e){const n=[],a={};let i=[],o=1;for(let n=0;n<t.length;n++)t[n]<t[0]+e.intervalo*o?i.push(t[n]):(a["classe"+o]=i,i=[t[n]],o++);a["classe"+o]=i;let s=0;for(let i=1;i<=e.quantClasse;i++)n.push((t[0]+e.intervalo*(i-1)+t[0]+e.intervalo*i)/2*a["classe"+i].length),s+=n[i-1];return s/t.length}},{}],25:[function(t,e,n){n.init=function(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}},{}],26:[function(t,e,n){n.init=function(t){let e=0;const n=[];return t.length%2==0?t[e=t.length/2-1]!=t[e+1]?(n.push(t[e]),n.push(t[e+1]),n):t[e]:t[e=Math.round(t.length/2-1)]}},{}],27:[function(t,e,n){n.init=function(t,e,n){const a=t.length/2,i=t[Math.round(a)],o={};let s,r,l,c=[],d=1;for(let e=0;e<t.length;e++)t[e]<t[0]+n.intervalo*d?c.push(t[e]):(o["classe"+d]=c,c=[t[e]],d++);o["classe"+d]=c;for(let a=0;a<n.quantClasse;a++)if(-1!=o["classe"+(a+1)].indexOf(i)){s=t[0]+n.intervalo*a,r=0==a?0:e[a-1],l=o["classe"+(a+1)].length;break}return s+(a-r)/l*n.intervalo}},{}],28:[function(t,e,n){n.init=function(t){let e=0;return t.length%2==0?t[e=t.length/2-1]!=t[e+1]?(t[e]+t[e+1])/2:t[e]:t[e=Math.round(t.length/2-1)]}},{}],29:[function(t,e,n){n.init=function(t,e,n,a,i,o){const s=t.length*a/i,r=[],l=[];let c,d,u=Math.round(s);s-u<0&&u--;for(let e=0;e<Object.keys(o).length;e++)o["classe"+(e+1)].indexOf(t[u])>-1&&(d=e+1);for(let n=0;n<e.quantClasse;n++)r[n]=t[0]+e.intervalo*n,l[n]=o["classe"+(n+1)].length;return c=1==d?0:n[d-2],r[d-1]+(s-c)/l[d-1]*e.intervalo}},{}],30:[function(t,e,n){n.init=function(t,e,n){const a=Math.round(t.length*e/n);return 0==a?t[a]:t[a-1]}},{}],31:[function(t,e,n){n.init=function(t){const e=t[0],n=t[1],a=[];let i=e[0],o=0;for(let t=0;t<e.length;t++)if(e[t]>=i){o=i,i=e[t];for(let t=0;t<a.length;t++)o<i&&a.pop();a.push(n[t])}return a}},{}],32:[function(t,e,n){n.init=function(t,e){const n={};let a,i,o=[],s=1;for(let a=0;a<t.length;a++)t[a]<t[0]+e.intervalo*s?o.push(t[a]):(n["classe"+s]=o,o=[t[a]],s++);n["classe"+s]=o,a=1,i=n.classe1.length;for(let t=1;t<e.quantClasse;t++)n["classe"+(t+1)].length>i&&(a=t+1,i=n["classe"+(t+1)].length);return(t[0]+e.intervalo*(a-1)+(t[0]+e.intervalo*a))/2}},{}],33:[function(t,e,n){n.init=function(t){const e=t[0],n=t[1],a=[];let i=e[0],o=0;for(let t=0;t<e.length;t++)if(e[t]>=i){o=i,i=e[t];for(let t=0;t<a.length;t++)o<i&&a.pop();a.push(n[t])}return a}},{}]},{},[2]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
