!function(){return function e(t,n,a){function i(s,r){if(!n[s]){if(!t[s]){var l="function"==typeof require&&require;if(!r&&l)return l(s,!0);if(o)return o(s,!0);var c=new Error("Cannot find module '"+s+"'");throw c.code="MODULE_NOT_FOUND",c}var u=n[s]={exports:{}};t[s][0].call(u.exports,function(e){return i(t[s][1][e]||e)},u,u.exports,e,t,n,a)}return n[s].exports}for(var o="function"==typeof require&&require,s=0;s<a.length;s++)i(a[s]);return i}}()({1:[function(e,t,n){const a=e("./dados/entradaDados.js"),i=e("./frequencia.js"),o=(e("./intervaloClasse.js"),e("./calculaFacContinua.js"),e("./dados/identificaVariavel.js")),s=e("./moda/modaQualitativa.js"),r=e("./moda/modaQuantitativaDiscreta.js"),l=(e("./moda/modaQuantitativaContinua.js"),e("./media/mediaQuantitativaDiscreta.js")),c=(e("./media/mediaQuantitativaContinua.js"),e("./mediana/medianaQuantitativaDiscreta.js")),u=(e("./mediana/medianaQuantitativaContinua.js"),e("./mediana/medianaQualitativa.js")),d=e("./erros/mensagemErroValidacaoDados.js"),f=e("./criaTabela.js"),m=e("./criaDadosTabela.js");e("./criaGrafico.js");function h(e,t,n){let a,i;const o=document.querySelectorAll(".title-valores");for(let s=0;s<o.length;s++){switch(o[s].id){case"moda":a=document.createElement("p"),i=document.createTextNode(e),a.appendChild(i);break;case"media":a=document.createElement("p"),i=document.createTextNode(t),a.appendChild(i);break;case"mediana":a=document.createElement("p"),i=document.createTextNode(n),a.appendChild(i);break;case"desvioPadrao":a=document.createElement("p"),i=document.createTextNode("a"),a.appendChild(i)}o[s].appendChild(a)}}document.querySelector("#comece_agora").addEventListener("click",function(e){console.log("a"),e.preventDefault(),document.querySelector("#comece_agora").classList.add("d-none"),document.querySelector("#todos_tipos_pesquisa").classList.remove("d-none");const t=document.querySelectorAll(".pesquisa");for(let e=0;e<t.length;e++)t[e].addEventListener("click",function(e){e.preventDefault();const t=document.querySelector("#dados").value,n=a.init(t);let g;if(1==n||2==n)d.init(n);else{g=o.init(n);const e=i.init(n);let t,a,d;"qualitativa"==g?(t=s.init(e),d=u.init(n)):"discreta"==g&&(t=r.init(e),a=l.init(n),d=c.init(n));const p=m.init(g,e);let v;f.init(p,g),document.querySelector("#menu-tabs").classList.remove("d-none"),document.querySelector("#valores").classList.remove("d-none"),v="tabela",h(t,a,d);const j=document.querySelectorAll(".nav-link");for(let e=0;e<j.length;e++)j[e].addEventListener("click",function(e){e.preventDefault,"Tabela"==this.text?(this.classList.add("active"),document.querySelector("#"+this.id).classList.add("avtive"),document.querySelector("#"+v).classList.remove("active"),document.querySelector("."+v).classList.add("d-none"),document.querySelector("."+this.id).classList.remove("d-none"),v=this.id):"Gráfico"==this.text&&(document.querySelector("#"+this.id).classList.add("avtive"),document.querySelector("#"+v).classList.remove("active"),document.querySelector("."+v).classList.add("d-none"),document.querySelector("."+this.id).classList.remove("d-none"),v=this.id)})}})})},{"./calculaFacContinua.js":2,"./criaDadosTabela.js":3,"./criaGrafico.js":4,"./criaTabela.js":5,"./dados/entradaDados.js":6,"./dados/identificaVariavel.js":7,"./erros/mensagemErroValidacaoDados.js":8,"./frequencia.js":9,"./intervaloClasse.js":10,"./media/mediaQuantitativaContinua.js":11,"./media/mediaQuantitativaDiscreta.js":12,"./mediana/medianaQualitativa.js":13,"./mediana/medianaQuantitativaContinua.js":14,"./mediana/medianaQuantitativaDiscreta.js":15,"./moda/modaQualitativa.js":16,"./moda/modaQuantitativaContinua.js":17,"./moda/modaQuantitativaDiscreta.js":18}],2:[function(e,t,n){n.init=function(e,t){const n=[];let a=[],i=1;for(let o=0;o<e.length;o++)e[o]<e[0]+t.intervalo*i?a.push(e[o]):(0==n.length?n[0]=a.length:n[i-1]=a.length+n[i-2],i++,a=[e[o]]);return n[i-1]=a.length+n[i-2],n}},{}],3:[function(e,t,n){const a=["fr %"],i=["Fac"],o=["Fac %"];n.init=function(e,t){let n=[];const s=t[1].slice();s.unshift("xi");const r=t[0].slice();return r.unshift("fi"),function(e){let t=0;for(let n=1;n<e.length;n++)t+=e[n],i.push(t);for(let n=1;n<e.length;n++)a.push(parseFloat(e[n]/t*100).toFixed(2)+"%"),o.push(parseFloat(i[n]/t*100).toFixed(2)+"%")}(r),n=[s,r,a,i,o]}},{}],4:[function(e,t,n){function a(){const e=new google.visualization.DataTable;e.addColumn("string","Topping"),e.addColumn("number","Slices"),e.addRows([["Lorem ipsum",3],["Dolor sit",1],["Sit amet",1],["Pepperoni",2]]);new google.visualization.PieChart(document.getElementById("myChart")).draw(e,{tittle:"teste",width:400,height:300})}google.charts.load("current",{packages:["corechart"]}),google.charts.setOnLoadCallback(a),n.init=a},{}],5:[function(e,t,n){n.init=function(e,t){let n;if("continua"==t);else{const t=document.querySelector(".table"),a=document.createElement("tbody");for(let t=0;t<e[0].length;t++){const i=document.createElement("tr");for(let a=0;a<e.length;a++){if(0==t){n=document.createElement("th");const i=document.createTextNode(e[a][t]);n.appendChild(i)}else{n=document.createElement("td");const i=document.createTextNode(e[a][t]);n.appendChild(i)}i.appendChild(n)}a.appendChild(i)}t.appendChild(a)}}},{}],6:[function(e,t,n){n.init=function(e=null){let t=0,n=0;if(null==e||e.length<=1)return 1;const a=e.split(",").map(function(e){return e.trim()});for(let e=0;e<a.length;e++)isNaN(a[e])&&t++,isNaN(a[e])||(n++,a[e]=parseFloat(a[e]));return t>0&&n>0?2:a}},{}],7:[function(e,t,n){n.init=function(e){const t=[];if("string"==typeof e[0])return"qualitativa";for(let n=0;n<e.length;n++)-1==t.indexOf(e[n])&&t.push(e[n]);return t.length<7?"discreta":t.length>=7&&t.length<=10?"pergunta":"continua"}},{}],8:[function(e,t,n){n.init=function(e){const t=document.querySelector("#mensagem");1==e?(t.classList.add("alert-danger"),t.innerHTML="Quantidade de dados insulficiente. Reinsira os dados"):2==e&&(t.classList.add("alert-danger"),t.innerHTML="Dados incorretos. Insira apenas números ou apenas letras"),$("#mensagem").fadeIn("300",function(){window.setTimeout(function(){$("#mensagem").fadeOut()},5e3)})}},{}],9:[function(e,t,n){n.init=function(e){const t=[],n=[],a=[];let i=0;for(let n=0;n<e.length;n++)-1==t.indexOf(e[n])&&t.push(e[n]);for(let a=0;a<t.length;a++){for(let n=0;n<e.length;n++)t[a]==e[n]&&i++;n.push(i),i=0}return a.push(n,t),a}},{}],10:[function(e,t,n){n.init=function(e){let t,n=e[e.length-1]-e[0]+1,a=0,i=0;const o=Math.sqrt(n),s={};do{n%(Math.round(o)-1)==0?(t=n/(i=n/(Math.round(o)-1)),a++):n%Math.round(o)==0?(t=n/(i=n/Math.round(o)),a++):n%(Math.round(o)+1)==0&&(t=n/(i=n/(Math.round(o)+1)),a++),n++}while(0==a);return s.intervalo=i,s.quantClasse=t,s}},{}],11:[function(e,t,n){n.init=function(e,t){const n=[],a={};let i=[],o=1;for(let n=0;n<e.length;n++)e[n]<e[0]+t.intervalo*o?i.push(e[n]):(a["classe"+o]=i,i=[e[n]],o++);a["classe"+o]=i;let s=0;for(let i=1;i<=t.quantClasse;i++)n.push((e[0]+t.intervalo*(i-1)+e[0]+t.intervalo*i)/2*a["classe"+i].length),s+=n[i-1];return s/e.length}},{}],12:[function(e,t,n){n.init=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t/e.length}},{}],13:[function(e,t,n){n.init=function(e){let t=0;const n=[];return e.length%2==0?e[t=e.length/2-1]!=e[t+1]?(n.push(e[t]),n.push(e[t+1]),n):e[t]:e[t=Math.round(e.length/2-1)]}},{}],14:[function(e,t,n){n.init=function(e,t,n){const a=e.length/2,i=e[Math.round(a)],o={};let s,r,l,c=[],u=1;for(let t=0;t<e.length;t++)e[t]<e[0]+n.intervalo*u?c.push(e[t]):(o["classe"+u]=c,c=[e[t]],u++);o["classe"+u]=c;for(let a=0;a<n.quantClasse;a++)if(-1!=o["classe"+(a+1)].indexOf(i)){s=e[0]+n.intervalo*a,r=0==a?0:t[a-1],l=o["classe"+(a+1)].length;break}const d=s+(a-r)/l*n.intervalo;return console.log(s,r,a,l,n.intervalo),d}},{}],15:[function(e,t,n){n.init=function(e){let t=0;return e.length%2==0?e[t=e.length/2-1]!=e[t+1]?(e[t]+e[t+1])/2:e[t]:e[t=Math.round(e.length/2-1)]}},{}],16:[function(e,t,n){n.init=function(e){const t=e[0],n=e[1],a=[];let i=t[0],o=0;for(let e=0;e<t.length;e++)if(t[e]>=i){o=i,i=t[e];for(let e=0;e<a.length;e++)o<i&&a.pop();a.push(n[e])}return a}},{}],17:[function(e,t,n){n.init=function(e,t){const n={};let a,i,o=[],s=1;for(let a=0;a<e.length;a++)e[a]<e[0]+t.intervalo*s?o.push(e[a]):(n["classe"+s]=o,o=[e[a]],s++);n["classe"+s]=o,a=1,i=n.classe1.length;for(let e=1;e<t.quantClasse;e++)n["classe"+(e+1)].length>i&&(a=e+1,i=n["classe"+(e+1)].length);return(e[0]+t.intervalo*(a-1)+(e[0]+t.intervalo*a))/2}},{}],18:[function(e,t,n){n.init=function(e){const t=e[0],n=e[1],a=[];let i=t[0],o=0;for(let e=0;e<t.length;e++)if(t[e]>=i){o=i,i=t[e];for(let e=0;e<a.length;e++)o<i&&a.pop();a.push(n[e])}return a}},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
